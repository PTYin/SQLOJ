{"version":3,"sources":["common/images/logo.png","student/recordDetail.js","homepage/anime.js","homepage/app.js","homepage/login.js","student/assignments.js","student/questions.js","student/submit.js","student/records.js","components/guideTeacher.js","teacher/teacherAssignments.js","teacher/updateAssignment.js","teacher/addAssignment.js","teacher/teacherQuestions.js","teacher/questionDetail.js","teacher/teacherRecordDetail.js","teacher/addQuestion.js","teacher/updateQuestion.js","teacher/databases.js","teacher/addDatabase.js","router.js","index.js","components/guide.js"],"names":["Submit","useState","questionName","setQuestionName","description","setDescription","code","setCode","header","setHeader","output","setOutput","Header","Layout","Content","Sider","history","useHistory","useEffect","questionPromise","axios","get","params","question_id","window","sessionStorage","record_question_id","recordPromise","record_id","Promise","all","then","responses","questionResponse","recordResponse","data","record_status","toUpperCase","message","info","error","success","record_lack","record_err","record_header","eval","record_output","temp_header","forEach","element","push","title","dataIndex","key","align","temp_output","list","i","temp","j","console","log","question_name","question_description","question_output","record_code","className","src","logo","style","height","alt","width","item","padding","margin","type","duration","ease","dangerouslySetInnerHTML","__html","value","options","readOnly","lineNumbers","mode","name","lineWrapping","foldGutter","theme","pagination","defaultPageSize","showSizeChanger","showQuickJumper","columns","dataSource","onClick","Anime","state","show","geInterval","e","index","getEnter","t","opacity","scale","y","getSplit","split","c","str","length","setState","onClick2","localStorage","collapsed","props","shape","icon","PlayCircleTwoTone","this","animation","x","delay","enter","interval","component","TweenOne","componentProps","letterSpacing","React","Component","App","FormItem","Form","Item","Login","doubleLayout","labelCol","span","wrapperCol","singleLayout","username","setUsername","password","setPassword","remember","setRemember","removeItem","initialValues","textAlign","label","placeholder","maxLength","defaultValue","onChange","event","target","offset","defaultChecked","checked","id","URLSearchParams","append","defaults","withCredentials","post","login","response","Assignments","setData","render","record","size","assignment_ID","assignment_id","query_assignment_list","k","Date","parse","assignment_end_time","op","timer","setInterval","clearInterval","Questions","tag","color","question_ID","select_questions_by_assignment","is_finished","forwardRef","refSelf","onBeforeChange","editor","extraKeys","styleActiveLine","Records","query_record_list","undefined","running_time","record_time","GuideTeacher","SubMenu","Menu","isChangePasswordVisible","setIsChangePasswordVisible","isAddUserVisible","setIsAddUserVisible","studentUsername","setStudentUsername","studentPassword","setStudentPassword","oldPassword","setOldPassword","newPassword","setNewPassword","selectedKeys","borderRight","CalendarOutlined","visible","onOk","current_pw","new_pw","onCancel","UserOutlined","ItemGroup","ToolOutlined","UserAddOutlined","DatabaseOutlined","LogoutOutlined","assignment_name","assignment_start_time","delete","UpdateAssignment","setID","setName","start","setStart","end","setEnd","RangePicker","DatePicker","status","text","ranges","Today","moment","startOf","endOf","showTime","format","dateStrings","strftime","patch","detail_question_id","update_question_id","answer","setAnswer","question_answer","AddQuestion","databaseId","setDatabaseId","questionDescription","setQuestionDescription","questionOutput","questionType","setQuestionType","Option","Select","Panel","Collapse","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","filterSort","optionA","optionB","localeCompare","map","v","db_id","db_name","defaultActiveKey","contentStyle","contentFormat","content","toHTML","question_type","UpdateQuestion","assignmentId","setAssignmentId","questionId","setQuestionId","setQuestionOutput","BraftEditor","createEditorState","Databases","database_id","queryDatabaseList","AddDatabase","TextArea","Input","databaseName","setDatabaseName","file","setFile","fileList","setFileList","beforeUpload","curFile","curFileList","slice","url","rows","UploadOutlined","form","FormData","IRouter","path","RecordDetail","TeacherAssignments","AddAssignment","TeacherQuestions","QuestionDetail","TeacherRecordDetail","crossDomain","interceptors","use","reject","ReactDOM","document","getElementById","Guide","isModalVisible","setIsModalVisible"],"mappings":"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","file":"static/js/main.7febad6d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.47f88b05.png\";","import React, {useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport Guide from \"../components/guide\";\nimport logo from '../common/images/logo.png';\nimport '../common/layout.css';\nimport {Button, Card, Layout, message, Table} from \"antd\";\nimport axios from \"axios\";\nimport QueueAnim from \"rc-queue-anim\";\nimport 'github-markdown-css'\nimport '../common/otto.css'\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/sql/sql';\nimport 'codemirror/addon/hint/show-hint.css';\nimport 'codemirror/addon/hint/show-hint.js';\nimport 'codemirror/addon/hint/sql-hint.js';\nimport 'codemirror/theme/solarized.css';\nimport {Controlled as CodeMirror} from \"react-codemirror2\";\n\nexport default function Submit()\n{\n    // const [timer,setTimer] = useState(0)\n    // const [show] = useState(true)\n    const [questionName, setQuestionName] = useState('');\n    const [description, setDescription] = useState('');\n    const [code, setCode] = useState('');\n    const [header, setHeader] = useState([]);\n    const [output, setOutput] = useState([]);\n    // const [output, setOutput] = useState({header:[], data:[]});\n\n    const {Header, Content, Sider} = Layout;\n    const history = useHistory();\n    useEffect(() =>\n    {\n        // const now = Date.now()\n        const questionPromise = axios.get('/api/student/selectQuestionById', {\n            params: {\n                question_id: window.sessionStorage.record_question_id\n            }\n        })\n        const recordPromise = axios.get('api/student/selectRecordById', {\n            params: {\n                record_id: window.sessionStorage.record_id\n            }\n        })\n\n        Promise.all([questionPromise, recordPromise]).then((responses) =>\n        {\n            const questionResponse = responses[0], recordResponse = responses[1]\n            if (recordResponse.data.record_status.toUpperCase() === 'RUNNING')\n            {\n                message.info('Executing...')\n            } else if (recordResponse.data.record_status.toUpperCase() === 'RE')\n            {\n                message.error('Please retry! The execution of your commands caused runtime error.');\n            } else\n            {\n                if (recordResponse.data.record_status.toUpperCase() === 'AC')\n                {\n                    message.success('Congrats! You completed this question');\n                } else if (recordResponse.data.record_status.toUpperCase() === 'WA')\n                {\n                    message.error('Please retry! Your answer is ' + recordResponse.data.record_lack +\n                        ' rows missing and ' + recordResponse.data.record_err + ' rows wrong');\n                } else if (recordResponse.data.record_status.toUpperCase() === 'TLE')\n                {\n                    message.error('Please retry! The execution of your commands reached the time limit');\n                }\n                recordResponse.data.record_header = eval(recordResponse.data.record_header)\n                recordResponse.data.record_output = eval(recordResponse.data.record_output)\n                // console.log(response.data.record_header, response.data.record_output)\n                let temp_header = []\n                recordResponse.data.record_header.forEach((element) =>\n                {\n                    temp_header.push({title: element, dataIndex: element, key: element, align: \"center\"})\n                })\n                let temp_output = []\n                recordResponse.data.record_output.forEach((list, i) =>\n                {\n                    let temp = {key: i}\n                    list.forEach((element, j) =>\n                    {\n                        temp[temp_header[j].title] = element\n                    })\n                    temp_output.push(temp)\n                })\n                console.log(temp_header)\n                console.log(temp_output)\n                // setTimeout(()=>setOutput(temp_output), 1000)\n\n                setQuestionName(questionResponse.data.question_name)\n                setDescription(questionResponse.data.question_description)\n                setOutput(questionResponse.data.question_output)\n                setCode(recordResponse.data.record_code)\n                setHeader(temp_header)\n                setOutput(temp_output)\n                // setOutput({header: temp_header, data: temp_output})\n            }\n        })\n    }, [])\n    return <Layout>\n        <Header className=\"header\">\n            <img src={logo} style={{height: '45px'}} alt=\"\"/>\n        </Header>\n        <Layout>\n            <Sider width={200} className=\"site-layout-content\"><Guide item=\"records\"/></Sider>\n            <Layout style={{padding: '0 24px 24px'}}>\n                <Content className=\"default_font\" style={{margin: '24px 0'}}>\n                    <QueueAnim\n                        key=\"demo\"\n                        type={['right', 'left']}\n                        duration=\"2000\"\n                        ease={['easeOutQuart', 'easeInOutQuart']}>\n                        <div key=\"question_name\">\n                            <Card className=\"info-card\" title=\"question name\">\n                                <div dangerouslySetInnerHTML={{__html: questionName}}/>\n                            </Card>\n                        </div>\n                        <div key=\"question_description\">\n                            <Card className=\"info-card\" title=\"question description\">\n                                <div dangerouslySetInnerHTML={{__html: description}}/>\n                            </Card>\n                        </div>\n                        {/*<div key=\"output\">*/}\n                        {/*    <Card className=\"info-card\" title=\"output\">*/}\n                        {/*        <div dangerouslySetInnerHTML={{__html: output}}/>*/}\n                        {/*    </Card>*/}\n                        {/*</div>*/}\n                        <div key=\"code\">\n                            <Card title=\"submitted code\">\n                                <CodeMirror\n                                    key='editor'\n                                    value={code}\n                                    options={{\n                                        readOnly: true,\n                                        lineNumbers: true,\n                                        mode: {name: \"text/x-mysql\"},\n                                        lineWrapping: true,\n                                        foldGutter: true,\n                                        theme: \"solarized\",\n                                    }}\n                                />\n                            </Card>\n                        </div>\n                        <div key=\"record_output\">\n                            <Card className=\"info-card\" title=\"Output\">\n                                <Table pagination={{defaultPageSize: 5, showSizeChanger: true, showQuickJumper: true}} columns={header} dataSource={output}/>\n                                {/*<Table pagination={{defaultPageSize: 5, showSizeChanger: true, showQuickJumper: true}} columns={output.header} dataSource={output.data}/>*/}\n                            </Card>\n                        </div>\n                        <div key=\"return\" className=\"button-container\">\n                            <Button type=\"primary\"\n                                    className='button' onClick={() =>\n                            {\n                                history.push('/records');\n                            }}>return</Button>\n                        </div>\n                    </QueueAnim>\n                </Content>\n            </Layout>\n        </Layout>\n    </Layout>\n}\n","import React from \"react\";\nimport Texty from 'rc-texty';\nimport 'rc-texty/assets/index.css';\nimport TweenOne from 'rc-tween-one';\nimport Button from 'antd/lib/button';\nimport {PlayCircleTwoTone} from '@ant-design/icons';\nimport './anime.css'\nimport QueueAnim from \"rc-queue-anim\";\n\nexport default class Anime extends React.Component\n{\n\n    state = {\n        show: true,\n    }\n    geInterval = (e) =>\n    {\n        switch (e.index)\n        {\n            case 0:\n                return 0;\n            case 1:\n                return 150;\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n                return 150 + 450 + (e.index - 2) * 10;\n            default:\n                return 150 + 450 + (e.index - 6) * 150;\n        }\n    }\n    getEnter = (e) =>\n    {\n        const t = {\n            opacity: 0,\n            scale: 0.8,\n            y: '-100%',\n        };\n        if (e.index >= 2 && e.index <= 6)\n        {\n            return {...t, y: '-30%', duration: 150};\n        }\n        return t;\n    }\n\n    getSplit = (e) =>\n    {\n        const t = e.split(' ');\n        const c = [];\n        t.forEach((str, i) =>\n        {\n            c.push((\n                <span key={`${str}-${i}`}>\n          {str}\n        </span>\n            ));\n            if (i < t.length - 1)\n            {\n                c.push(<span key={` -${i}`}> </span>);\n            }\n        });\n        return c;\n    }\n\n    onClick = () =>\n    {\n        this.setState({\n            show: false,\n        }, () =>\n        {\n            this.setState({\n                show: true\n            });\n        });\n    }\n    onClick2 = () =>\n    {\n        window.localStorage.collapsed = 0\n        this.props.history.push(\"/login\")\n    }\n\n    render()\n    {\n        return (\n            <div className=\"combined-wrapper\">\n                <div className=\"combined-reload\">\n                    <Button type=\"primary\" shape=\"circle\" icon={<PlayCircleTwoTone/>} onClick={this.onClick}/>\n                </div>\n                <div>\n                    {this.state.show && (\n                        <div className=\"combined\">\n                            <div className=\"combined-shape\">\n                                <div className=\"shape-left\">\n                                    <TweenOne\n                                        animation={[\n                                            {x: 158, type: 'from', ease: 'easeInOutQuint', duration: 600},\n                                            {x: -158, ease: 'easeInOutQuart', duration: 450, delay: -150},\n                                        ]}\n                                    />\n                                </div>\n                                <div className=\"shape-right\">\n                                    <TweenOne\n                                        animation={[\n                                            {x: -158, type: 'from', ease: 'easeInOutQuint', duration: 600},\n                                            {x: 158, ease: 'easeInOutQuart', duration: 450, delay: -150},\n                                        ]}\n                                    />\n                                </div>\n                            </div>\n                            <Texty\n                                className=\"title\"\n                                type=\"mask-top\"\n                                delay={400}\n                                enter={this.getEnter}\n                                interval={this.geInterval}\n                                component={TweenOne}\n                                componentProps={{\n                                    animation: [\n                                        {x: 130, type: 'set'},\n                                        {x: 100, delay: 500, duration: 450},\n                                        {\n                                            ease: 'easeOutQuart',\n                                            duration: 300,\n                                            x: 0,\n                                        },\n                                        {\n                                            letterSpacing: 0,\n                                            delay: -300,\n                                            scale: 0.9,\n                                            ease: 'easeInOutQuint',\n                                            duration: 1000,\n                                        },\n                                        {scale: 1, width: '100%', delay: -300, duration: 1000, ease: 'easeInOutQuint'},\n                                    ],\n                                }}\n                            >\n                                {/*SQL OnlineJudge*/}\n                                {/*DBS EXPERT*/}\n                                SQLOJ\n                            </Texty>\n                            <TweenOne\n                                className=\"combined-bar\"\n                                animation={{delay: 2000, width: 0, x: 158, type: 'from', ease: 'easeInOutExpo'}}\n                            />\n                            <Texty\n                                className=\"content\"\n                                type=\"bottom\"\n                                split={this.getSplit}\n                                delay={2200}\n                                interval={30}\n                            >\n                                {/*an online DataBase System EXPERimenTal platform*/}\n                                An open judge platform for Database System.\n                            </Texty>\n                            <QueueAnim\n                                key=\"demo\"\n                                type={['left', 'right']}\n                                delay=\"2300\"\n                                duration=\"1400\"\n                                ease={['easeOutQuart', 'easeInOutQuart']}>\n                                <div key=\"button-container\">\n                                    <Button className=\"jump\"\n                                            type=\"primary\"\n                                            icon=\"Login\" onClick={this.onClick2}/>\n                                </div>\n                            </QueueAnim>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react'\nimport 'antd/dist/antd.css'\nimport './app.css'\nimport Anime from './anime'\nimport {useHistory} from \"react-router-dom\";\n\n\nexport default function App()\n{\n    const history = useHistory();\n    return <Anime history={history}/>\n}","import React, {useEffect, useState} from 'react'\nimport {Button, Checkbox, Form, Input, message} from \"antd\";\nimport {useHistory} from \"react-router-dom\";\nimport axios from 'axios';\nimport QueueAnim from 'rc-queue-anim';\nimport './login.css'\nimport './anime.css'\nimport '../common/font.css'\n\nconst FormItem = Form.Item;\naxios.defaults.withCredentials = true\nexport default function Login()\n{\n    // const [value4,setValue4] = useState('Student')\n    const doubleLayout = {\n        labelCol: {span: 8},\n        wrapperCol: {span: 16},\n    };\n    const singleLayout = {\n        // wrapperCol: {offset: 8, span: 16},\n        wrapperCol: {span: 24},\n    };\n    const tailLayout = {\n        wrapperCol: {offset: 8, span: 16},\n        // wrapperCol: {span: 24},\n    };\n    // const [show] = useState(true)\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [remember, setRemember] = useState(false);\n    const history = useHistory();\n\n    useEffect(() =>\n    {\n        setRemember(window.localStorage.remember === 'true')\n        if (window.localStorage.remember === 'true')\n        {\n            setUsername(window.localStorage.username)\n            setPassword(window.localStorage.password)\n            // refCheckBox.current.state.checked = true\n        } else\n        {\n            window.localStorage.removeItem(\"username\")\n            window.localStorage.removeItem(\"password\")\n        }\n    }, [])\n    // const options = [\n    //         { label: 'Student', value: 'Student' },\n    //         { label: 'Teacher', value: 'Teacher' },\n    //         { label: 'Admin', value: 'Admin' },\n    // ];\n    return <div className=\"combined-wrapper\">\n        {/*<div style={{height: 200}}/>*/}\n        <QueueAnim\n            className=\"anime\"\n            key=\"demo\"\n            type={['top', 'bottom']}\n            duration=\"1400\"\n            ease={['easeOutQuart', 'easeInOutQuart']}>\n            <div className=\"frame\" key=\"demo1\">\n                <Form className='login-form'\n                      name=\"basic\"\n                      initialValues={{remember: true}}>\n                    <FormItem {...singleLayout} style={{textAlign: \"center\"}}>\n                        <p className=\"form_title\">login</p>\n                    </FormItem>\n                    <FormItem {...doubleLayout} label=\"username\">\n                        <Input placeholder=\"Please enter the user name\"\n                               maxLength={10}\n                               defaultValue={username}\n                               onChange={(event) =>\n                               {\n                                   setUsername(event.target.value)\n                               }}/>\n                    </FormItem>\n                    <FormItem  {...doubleLayout} label=\"password\">\n                        <Input placeholder=\"Please enter your password.\"\n                               defaultValue={password}\n                               maxLength={30} type={\"password\"}\n                               onChange={(event) =>\n                               {\n                                   setPassword(event.target.value)\n                               }}/>\n                    </FormItem>\n                    <FormItem  {...tailLayout} style={{textAlign: \"left\"}}>\n                        <Checkbox defaultChecked={remember} onChange={(e) =>\n                        {\n                            // console.log(e.target.checked)\n                            setRemember(e.target.checked)\n                        }}>Remember me</Checkbox>\n                    </FormItem>\n                    <FormItem  {...singleLayout} style={{textAlign: \"center\"}}>\n                        <Button type=\"primary\" style={{width: \"40%\"}} onClick={() =>\n                        {\n                            login(username, password).then((response) =>\n                            {\n                                console.log(response.data)\n                                if (response.data.success)\n                                {\n                                    message.success('Log in successfully.');\n                                    window.sessionStorage.username = username\n                                    window.localStorage.remember = remember\n                                    console.log(remember)\n                                    if (remember)\n                                    {\n                                        window.localStorage.username = username\n                                        window.localStorage.password = password\n                                    } else\n                                    {\n                                        window.localStorage.removeItem(\"username\")\n                                        window.localStorage.removeItem(\"password\")\n                                    }\n                                    if (response.data.data === 'teacher')\n                                    {\n                                        history.push('/teacherAssignments')\n                                    } else if (response.data.data === 'student')\n                                    {\n                                        history.push('/assignments');\n                                    }\n                                } else\n                                {\n                                    message.error('Invalid authentication information.');\n                                }\n                            })\n                        }}>OK</Button>\n                        {/*<Button style={{left: \"20%\"}} title={'Forgot password'} type=\"dashed\" shape=\"circle\"*/}\n                        {/*        icon={<QuestionCircleTwoTone/>} onClick={() =>*/}\n                        {/*{*/}\n                        {/*    history.push('forget')*/}\n                        {/*}}/>*/}\n                    </FormItem>\n                </Form>\n            </div>\n        </QueueAnim>\n    </div>\n}\n\nfunction login(id, password)\n{\n    // window.localStorage.id = id;\n    // window.sessionStorage.current = 'assignments'\n    const params = new URLSearchParams();\n    params.append('username', id);\n    params.append('password', password);\n    axios.defaults.withCredentials = true;\n    return axios.post('/api/login', params);\n}\n","import React, {useEffect, useState} from \"react\";\nimport axios from 'axios';\nimport {useHistory} from \"react-router-dom\";\nimport {Button, Layout, Space, Table} from 'antd';\nimport logo from '../common/images/logo.png';\nimport QueueAnim from 'rc-queue-anim';\nimport '../common/layout.css';\nimport Guide from \"../components/guide\";\n\n\nexport default function Assignments()\n{\n    // window.sessionStorage.current = 'assignments'\n    // const [timer, setTimer] = useState(0)\n    // const [show] = useState(true)\n    const {Header, Content, Sider} = Layout;\n    const [data, setData] = useState([])\n    const history = useHistory();\n    const columns = [\n        {\n            title: 'Assignment Name',\n            dataIndex: 'assignment_name',\n            key: 'name',\n            // render: text => <a>{text}</a>,\n        },\n        {\n            title: 'Start',\n            dataIndex: 'assignment_start_time',\n            key: 'start',\n        },\n        {\n            title: 'DDL',\n            dataIndex: 'assignment_end_time',\n            key: 'deadline',\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (record) => (\n                <Space size=\"middle\">\n                    <Button className='button' onClick={() =>\n                    {\n                        window.sessionStorage.assignment_ID = record.assignment_id;\n                        // window.localStorage.assignment_ID = record.assignment_name;\n                        history.push(\"/questions\");\n                    }}>{\"questions\"}</Button>\n                </Space>\n            ),\n        }\n    ];\n\n    useEffect(() =>\n    {\n        // const now = Date.now()\n\n        // if (timer === 0 || now - timer > 3000)\n        function query_assignment_list()\n        {\n            axios.defaults.withCredentials = true;\n            axios.get('/api/student/queryAssignmentList').then((response) =>\n            {\n                const temp = response.data\n                for (let i = 0; i < temp.length; i++)\n                {\n                    temp[i].key = temp[i].assignment_id;\n                    // let newTime = new Date(temp[i].assignment_start_time);\n                    // temp[i].assignment_start_time = strftime(\"%y/%m/%d %H:%M:%S\", newTime)\n                    // newTime = new Date(temp[i].assignment_end_time);\n                    // temp[i].assignment_end_time = strftime(\"%y/%m/%d %H:%M:%S\", newTime)\n                }\n                for (let k = 0; k < temp.length; k++)\n                {\n                    for (let j = k; j < temp.length; j++)\n                    {\n                        if (Date.parse(temp[k].assignment_end_time) > Date.parse(temp[j].assignment_end_time))\n                        {\n                            const op = temp[k];\n                            temp[k] = temp[j];\n                            temp[j] = op;\n                        }\n                    }\n                }\n                setData(temp)\n            })\n        }\n\n        query_assignment_list()\n        const timer = setInterval(query_assignment_list, 3000)\n\n        return () =>\n        {\n            clearInterval(timer)\n        }\n    }, [])\n    return <Layout>\n        <Header className=\"header\">\n            <img src={logo} style={{height: '45px'}} alt=\"\"/>\n        </Header>\n        <Layout>\n            <Sider style={{width: '200px'}} className=\"site-layout-content\">\n                {/*{props.guide}*/}\n                <Guide item=\"assignments\"/>\n            </Sider>\n            <Layout style={{padding: '0 24px 24px'}}>\n                <Content className=\"default_font\" style={{margin: '24px 0'}}>\n                    <QueueAnim\n                        key=\"demo\"\n                        type={['top', 'bottom']}\n                        duration=\"1400\"\n                        ease={['easeOutQuart', 'easeInOutQuart']}>\n                        <div key=\"assignments\">\n                            <Table columns={columns} dataSource={data}/>\n                        </div>\n                    </QueueAnim>\n                </Content>\n            </Layout>\n        </Layout>\n    </Layout>\n}\n\n\n// import React from 'react';\n// import Guide from \"../components/guide\";\n// import Assignments from \"../components/assignments\";\n//\n// export default function()\n// {\n//     return <Assignments action='questions' guide={Guide({item: 'assignments'})} />\n// }","import React, {useEffect, useState} from \"react\";\nimport Guide from \"../components/guide\";\nimport axios from 'axios';\nimport {useHistory} from \"react-router-dom\";\nimport {Button, Layout, Space, Table, Tag} from 'antd';\nimport logo from '../common/images/logo.png';\nimport '../common/layout.css';\nimport QueueAnim from \"rc-queue-anim\";\n\nexport default function Questions()\n{\n    // window.sessionStorage.current = 'assignments'\n    // const [timer, setTimer] = useState(0)\n    const [show] = useState(true)\n    const {Header, Content, Sider} = Layout;\n    const [data, setData] = useState([])\n    const history = useHistory();\n    const columns = [\n        // {\n        //     title: 'Index',\n        //     dataIndex: 'question_index',\n        //     key: 'index'\n        // },\n        {\n            title: 'Question Name',\n            dataIndex: 'question_name',\n            key: 'question_name',\n            // render: text => <a>{text}</a>\n        },\n        {\n            title: 'Finished',\n            dataIndex: 'is_finished',\n            key: 'is_finished',\n            render: tag =>\n            {\n                let color = 'green';\n                if (tag === 'No')\n                {\n                    color = 'volcano';\n                }\n                return (\n                    <Tag color={color} key={tag}>\n                        {tag.toUpperCase()}\n                    </Tag>);\n            }\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (record) => (\n                <Space size=\"middle\">\n                    <Button className='button' onClick={() =>\n                    {\n                        window.sessionStorage.question_ID = record.question_id;\n                        history.push('submit');\n                    }}>details</Button>\n                </Space>\n            ),\n        }\n    ];\n\n\n    const assignment_id = window.sessionStorage.assignment_ID;\n    useEffect(() =>\n    {\n        function select_questions_by_assignment()\n        {\n\n            axios.defaults.withCredentials = true;\n            axios.get('/api/student/selectQuestionsByAssignment', {\n                params:\n                    {\n                        assignment_id: assignment_id\n                    }\n            }).then((response) =>\n            {\n                const temp = response.data\n                for (let i = 0; i < temp.length; i++)\n                {\n                    temp[i].key = temp[i].question_id\n                    if (temp[i].is_finished === true)\n                    {\n                        temp[i].is_finished = 'Yes'\n                    } else\n                    {\n                        temp[i].is_finished = 'No'\n                    }\n                }\n                setData(response.data)\n            })\n        }\n\n        select_questions_by_assignment()\n        const timer = setInterval(select_questions_by_assignment, 3000)\n\n        return () =>\n        {\n            clearInterval(timer)\n        }\n    }, [assignment_id])\n    return <Layout>\n        <Header className=\"header\">\n            <img src={logo} style={{height: '45px'}} alt=\"\"/>\n        </Header>\n        <Layout>\n            <Sider width={200} className=\"site-layout-content\"><Guide item=\"assignments\"/></Sider>\n            <Layout style={{padding: '0 24px 24px'}}>\n                <Content className=\"default_font\" style={{margin: '24px 0'}}>\n                    <QueueAnim\n                        key=\"demo\"\n                        type={['top', 'bottom']}\n                        duration=\"1400\"\n                        ease={['easeOutQuart', 'easeInOutQuart']}>\n                        {show ? [\n                            <Table columns={columns} key=\"demo1\" dataSource={data}/>,\n                            <div style={{height: '20px'}}/>,\n                        ] : null}\n                    </QueueAnim>\n                </Content>\n            </Layout>\n        </Layout>\n    </Layout>\n}","import React, {forwardRef, useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport Guide from \"../components/guide\";\nimport logo from '../common/images/logo.png';\nimport '../common/layout.css';\nimport {Button, Card, Layout, message} from \"antd\";\nimport axios from \"axios\";\nimport QueueAnim from \"rc-queue-anim\";\n// import Cookies from 'js-cookie'\nimport 'github-markdown-css'\nimport '../common/otto.css'\nimport '../common/question.css'\nimport {Controlled as CodeMirror} from 'react-codemirror2';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/sql/sql';\nimport 'codemirror/addon/hint/show-hint.css';\nimport 'codemirror/addon/hint/show-hint.js';\nimport 'codemirror/addon/hint/sql-hint.js';\nimport 'codemirror/theme/solarized.css';\n\n\nconst Submit = forwardRef((props, refSelf) =>\n{\n    // window.sessionStorage.current = 'assignments'\n    // const [leader,setLeader] = useState([])\n    // const [timer,setTimer] = useState(0)\n    // const [show] = useState(true)\n    const [questionName, setQuestionName] = useState('');\n    const [description, setDescription] = useState('');\n    const [output, setOutput] = useState([]);\n    const [code, setCode] = useState('');\n    // const [mode,setMode] = useState('sqlite');\n    const {Header, Content, Sider} = Layout;\n    const id = window.sessionStorage.question_ID;\n    // const { Option } = Select;\n    const history = useHistory();\n\n    useEffect(() =>\n    {\n        console.log(code)\n        axios.get('/api/student/selectQuestionById', {\n            params:\n                {\n                    question_id: id\n                }\n        }).then((response) =>\n        {\n            setQuestionName(response.data.question_name);\n            setDescription(response.data.question_description)\n            // setMode(response.data.question_sql_type)\n            setOutput(response.data.question_output)\n            // setTimer(now)\n        })\n        // axios.get('/api/user/getLeaderBoardByQid',{params:{\n        //         question_id:id\n        //     }}).then((response) => {\n        //     setLeader(response.data.data)\n        //     setTimer(now)\n        // })\n    }, [])\n    return <Layout>\n        <Header className=\"header\">\n            <img src={logo} style={{height: '45px'}} alt=\"\"/>\n        </Header>\n        <Layout>\n            <Sider width={200} className=\"site-layout-content\"><Guide item=\"records\"/></Sider>\n            <Layout style={{padding: '0 24px 24px'}}>\n                <Content className=\"default_font\" style={{margin: '24px 0'}}>\n\n                    <QueueAnim\n                        key=\"demo\"\n                        type={['right', 'left']}\n                        duration=\"2000\"\n                        ease={['easeOutQuart', 'easeInOutQuart']}>\n                        {/*<div key=\"question_name\">*/}\n                        {/*    <Card className=\"info-card\" title=\"question name\">*/}\n                        {/*        <div dangerouslySetInnerHTML={{ __html: questionName }} />*/}\n                        {/*    </Card>*/}\n                        {/*</div>*/}\n                        {/*<div key=\"question_description\">*/}\n                        {/*    <Card className=\"info-card\" title=\"question description\">*/}\n                        {/*        <div dangerouslySetInnerHTML={{ __html: description }} />*/}\n                        {/*    </Card>*/}\n                        {/*</div>*/}\n                        {/*<div key=\"output\">*/}\n                        {/*    <Card className=\"info-card\" title=\"output\">*/}\n                        {/*        <div dangerouslySetInnerHTML={{ __html: output }} />*/}\n                        {/*    </Card>*/}\n                        {/*</div>*/}\n                        {/*<div key=\"editor\">*/}\n                        {/*    <CodeMirror*/}\n                        {/*        ref={refEditor}*/}\n                        {/*        value='# press Ctrl to autocomplete.'*/}\n                        {/*        options={{*/}\n                        {/*            lineNumbers: true,*/}\n                        {/*            mode: {name: \"text/x-mysql\"},*/}\n                        {/*            extraKeys: {\"Ctrl\": \"autocomplete\"},*/}\n                        {/*            // autofocus: true,*/}\n                        {/*            styleActiveLine: true,*/}\n                        {/*            lineWrapping: true,*/}\n                        {/*            foldGutter: true,*/}\n                        {/*            theme: \"solarized\",*/}\n                        {/*        }}*/}\n                        {/*    />*/}\n                        {/*</div>*/}\n                        {[\n                            // <Tag  color=\"geekblue\">{mode}</Tag>,\n                            <div key=\"question_name\">\n                                <Card className=\"info-card\" title=\"question name\">\n                                    <div dangerouslySetInnerHTML={{__html: questionName}}/>\n                                </Card>\n                            </div>,\n                            // <div style={{padding:'3px'}}/>,\n                            <div key=\"question_description\">\n                                <Card className=\"info-card\" title=\"question description\">\n                                    <div dangerouslySetInnerHTML={{__html: description}}/>\n                                </Card>\n                            </div>,\n                            // <div style={{padding:'3px'}}/>,\n                            // <div key=\"output\">\n                            //     <Card className=\"info-card\" title=\"output\">\n                            //         <div dangerouslySetInnerHTML={{__html: output}}/>\n                            //     </Card>\n                            // </div>,\n                            // <div style={{height:'10px'}}/>,\n                            // <div style={{padding:'3px'}}/>,\n                            <div key=\"question_answer\">\n                                <Card className=\"info-card\" title=\"question answer\">\n                                    <CodeMirror\n                                        key='editor'\n                                        value={code}\n                                        // value='# press Ctrl to autocomplete.'\n                                        onBeforeChange={(editor, data, value) => setCode(value)}\n                                        options={{\n                                            lineNumbers: true,\n                                            mode: {name: \"text/x-mysql\"},\n                                            extraKeys: {\"Ctrl\": \"autocomplete\"},\n                                            // autofocus: true,\n                                            styleActiveLine: true,\n                                            lineWrapping: true,\n                                            foldGutter: true,\n                                            theme: \"solarized\",\n                                        }}\n                                    />\n                                </Card>\n                            </div>,\n                            // <Select key=\"demo5\" defaultValue=\"postgreSQL\" style={{ width: 120,left:800 ,top:15}} onChange={(value)=>{\n                            //     console.log(this.refs.editor.outputHTML)\n                            //     setMode(value)\n                            // }}>\n                            //     <Option value=\"sqlite\">sqlite</Option>\n                            //     <Option value=\"postgreSQL\">postgresql</Option>\n                            // </Select>,\n                            <div key=\"submit\" className=\"button-container\">\n                                <Button type=\"primary\" style={{width: \"90px\"}} className='button' onClick={() =>\n                                {\n                                    axios.defaults.withCredentials = true;\n                                    const params = new URLSearchParams();\n                                    console.log(id)\n                                    console.log(code)\n                                    params.append('question_id', id)\n                                    params.append('code', code)\n                                    // console.log(Cookies.get('JSESSIONID'))\n                                    axios.post('/api/student/submit', params).then((response) =>\n                                    {\n                                        if (response.data.success)\n                                        {\n                                            message.success('Submit successfully.');\n                                            // console.log(window.localStorage.submitCode)\n                                            history.push('/records');\n                                        } else\n                                        {\n                                            message.error('Failed to submit.');\n                                        }\n                                    })\n                                }}>submit</Button>\n                            </div>,\n                            // <div style={{height:'20px'}} />,\n                            // <div>leader board</div>,\n                            // <Table columns={lead_columns} key=\"demo2\" dataSource={leader}/>,\n                            // <div style={{height:'20px'}} />,\n                        ]}\n                    </QueueAnim>\n                </Content>\n            </Layout>\n        </Layout>\n    </Layout>\n})\n\nexport default Submit;\n","import React, {useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport Guide from \"../components/guide\";\nimport axios from 'axios';\nimport {Button, Layout, Space, Table, Tag} from 'antd';\nimport logo from '../common/images/logo.png';\nimport QueueAnim from 'rc-queue-anim';\nimport '../common/layout.css';\n// import fireworks from 'react-fireworks';\n\nexport default function Records()\n{\n    // const [show] = useState(true)\n    const {Header, Content, Sider} = Layout;\n    const [data, setData] = useState([])\n    const history = useHistory();\n    const columns = [\n        {\n            title: 'Record',\n            dataIndex: 'record_id',\n            key: 'record_id',\n        },\n        {\n            title: 'Time',\n            dataIndex: 'record_time',\n            key: 'time',\n        },\n        {\n            title: 'Assignment',\n            dataIndex: 'assignment_name',\n            key: 'assignment_name'\n        },\n        {\n            title: 'Question',\n            dataIndex: 'question_name',\n            key: 'question_name',\n        },\n        {\n            title: 'Status',\n            dataIndex: 'record_status',\n            key: 'status',\n            render: tag =>\n            {\n                tag = tag.toUpperCase()\n                let color;\n                // let color = 'geekblue';\n                if (tag === 'RUNNING')\n                    color = 'geekblue'\n                else if (tag === 'AC')\n                    color = 'green';\n                else if (tag === 'WA')\n                    color = 'volcano';\n                else if (tag === 'TTL')\n                    color = 'yellow';\n\n                return (\n                    <Tag color={color} key={tag}>\n                        {tag}\n                    </Tag>\n                );\n            }\n        },\n        {\n            title: 'Running',\n            dataIndex: 'running_time',\n            key: 'running_time',\n            // render: tag =>\n            // {\n            //     // if (tag<0) {\n            //     //     tag = tag + 400;\n            //     // }\n            //     return (\n            //         <Tag color={'geekblue'} key={tag}>\n            //             {tag}\n            //         </Tag>\n            //     );\n            // }\n        },\n        {\n            title: 'Action',\n            key: 'detail',\n            render: (record) => (\n                <Space size=\"middle\">\n                    <Button className='button' onClick={() =>\n                    {\n                        window.sessionStorage.record_id = record.record_id\n                        window.sessionStorage.record_question_id = record.question_id;\n                        history.push('recordDetail');\n                    }}>detail</Button>\n                </Space>\n            ),\n        }\n    ];\n    useEffect(() =>\n    {\n        // fireworks.init(document,{})\n        // fireworks.start()\n        function query_record_list()\n        {\n            axios.defaults.withCredentials = true;\n            axios.get('/api/student/queryRecordList').then((response) =>\n            {\n                const temp = response.data\n                for (let i = 0; i < temp.length; i++)\n                {\n                    if (temp[i].running_time === undefined || temp[i].running_time === null)\n                    {\n                        temp[i].running_time = 'not available'\n                    }\n                }\n                for (let k = 0; k < temp.length; k++)\n                {\n                    for (let j = k; j < temp.length; j++)\n                    {\n                        if (new Date(temp[k].record_time) < new Date(temp[j].record_time))\n                        {\n                            const op = temp[k];\n                            temp[k] = temp[j];\n                            temp[j] = op;\n                        }\n                    }\n                }\n                // for (let i = 0; i < temp.length; i++)\n                // {\n                //     const newTime = temp[i].record_time;\n                //     temp[i].record_time = newTime.getFullYear() + '/' + newTime.getMonth() + '/' + newTime.getDate() + ' ' + newTime.getHours() + ':' + newTime.getMinutes()\n                // }\n                setData(temp)\n            })\n        }\n\n        query_record_list()\n        const timer = setInterval(query_record_list, 500)\n        return () =>\n        {\n            clearInterval(timer)\n        }\n    }, [])\n    return <Layout>\n        <Header className=\"header\">\n            <img src={logo} style={{height: '45px'}} alt=\"\"/>\n        </Header>\n        <Layout>\n            <Sider width={200} className=\"site-layout-content\">\n                <Guide item=\"records\"/>\n            </Sider>\n            <Layout style={{padding: '0 24px 24px'}}>\n                <Content className=\"default_font\" style={{margin: '24px 0'}}>\n                    <QueueAnim\n                        key=\"demo\"\n                        type={['top', 'bottom']}\n                        duration=\"1400\"\n                        ease={['easeOutQuart', 'easeInOutQuart']}>\n                        <Table columns={columns} key=\"demo1\" dataSource={data}/>\n                    </QueueAnim>\n                </Content>\n            </Layout>\n        </Layout>\n    </Layout>\n}","import React, {useState} from \"react\";\nimport {Form, Input, Menu, message, Modal} from 'antd';\nimport {useHistory} from \"react-router-dom\";\nimport '../common/font.css'\nimport {\n    CalendarOutlined,\n    DatabaseOutlined,\n    LogoutOutlined,\n    ToolOutlined,\n    UserAddOutlined,\n    UserOutlined\n} from '@ant-design/icons';\nimport axios from \"axios\";\n\nconst FormItem = Form.Item;\nexport default function GuideTeacher(props)\n{\n    const {SubMenu} = Menu;\n    const history = useHistory();\n    const [isChangePasswordVisible, setIsChangePasswordVisible] = useState(false);\n    const [isAddUserVisible, setIsAddUserVisible] = useState(false);\n    const [studentUsername, setStudentUsername] = useState('');\n    const [studentPassword, setStudentPassword] = useState('');\n    const [oldPassword, setOldPassword] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n    const singleLayout = {\n        // wrapperCol: {offset: 8, span: 16},\n        wrapperCol: {span: 24},\n    };\n    const doubleLayout = {\n        labelCol: {span: 8},\n        wrapperCol: {span: 16},\n    };\n\n    return (<div className=\"default_font\">\n            <Menu selectedKeys={[props.item]} mode=\"inline\" style={{height: '100%', borderRight: 0}}>\n                <Menu.Item key=\"assignments\" icon={<CalendarOutlined/>} onClick={(event) =>\n                {\n                    // window.localStorage.current = event.key\n                    history.push('/teacherAssignments')\n                }}>\n                    Assignments\n                </Menu.Item>\n                <Modal title=\"Change Password\" visible={isChangePasswordVisible}\n                       onOk={() =>\n                       {\n                           axios.defaults.withCredentials = true;\n                           axios.get('/api/ChangePassword',\n                               {\n                                   params: {\n                                       current_pw: oldPassword,\n                                       new_pw: newPassword\n                                   }\n                               }).then((response) =>\n                           {\n                               if (response.data.success)\n                               {\n                                   message.success('Change successfully.');\n                                   setIsChangePasswordVisible(false)\n                               } else\n                               {\n                                   message.error('Invalid authentication information.');\n                               }\n                           })\n                       }}\n                       onCancel={() => setIsChangePasswordVisible(false)}>\n                    <Form className='change-form'\n                          name=\"basic\"\n                          initialValues={{remember: true}}>\n                        <FormItem {...singleLayout} style={{textAlign: \"center\"}}>\n                            <p className=\"form_title\">{\"user: \" + window.sessionStorage.username}</p>\n                        </FormItem>\n                        <FormItem  {...doubleLayout} label=\"old password\">\n                            <Input placeholder=\"Please enter your old password.\"\n                                   maxLength={30} type={\"password\"}\n                                   onChange={(event) =>\n                                   {\n                                       setOldPassword(event.target.value)\n                                   }}/>\n                        </FormItem>\n                        <FormItem  {...doubleLayout} label=\"new password\">\n                            <Input placeholder=\"Please enter your new password.\"\n                                   maxLength={30} type={\"password\"}\n                                   onChange={(event) =>\n                                   {\n                                       setNewPassword(event.target.value)\n                                   }}/>\n                        </FormItem>\n                    </Form>\n                </Modal>\n                <Modal title=\"Add Student\" visible={isAddUserVisible}\n                       onOk={() =>\n                       {\n                           axios.defaults.withCredentials = true;\n                           axios.post('/api/register',\n                               {\n                                   username: studentUsername,\n                                   password: studentPassword\n                               }).then((response) =>\n                           {\n                               if (response.data.success)\n                               {\n                                   message.success('Add successfully.');\n                                   setIsAddUserVisible(false)\n                               } else\n                               {\n                                   message.error('Fail to add, please retry.');\n                               }\n                           })\n                       }}\n                       onCancel={() => setIsAddUserVisible(false)}>\n                    <Form className='add-form'\n                          name=\"basic\"\n                          initialValues={{remember: true}}>\n                        <FormItem  {...doubleLayout} label=\"student username\">\n                            <Input placeholder=\"Please enter the student username.\"\n                                   maxLength={10}\n                                   onChange={(event) =>\n                                   {\n                                       setStudentUsername(event.target.value)\n                                   }}/>\n                        </FormItem>\n                        <FormItem  {...doubleLayout} label=\"student password\">\n                            <Input placeholder=\"Please enter the student password.\"\n                                   maxLength={30} type={\"password\"}\n                                   onChange={(event) =>\n                                   {\n                                       setStudentPassword(event.target.value)\n                                   }}/>\n                        </FormItem>\n                    </Form>\n                </Modal>\n                <SubMenu key=\"user\" icon={<UserOutlined/>} title=\"user\">\n                    <Menu.ItemGroup title={'Current teacher: ' + window.sessionStorage.username}>\n                        <Menu.Item key=\"change_pwd\" icon={<ToolOutlined/>} onClick={(event) =>\n                        {\n                            setIsChangePasswordVisible(true);\n                            // window.localStorage.current = event.key\n                            // history.push('/change_pwd_teacher')\n                        }}>edit password</Menu.Item>\n                        <Menu.Item key=\"add_student\" icon={<UserAddOutlined/>} onClick={(event) =>\n                        {\n                            setIsAddUserVisible(true);\n                        }}>add student</Menu.Item>\n                    </Menu.ItemGroup>\n                </SubMenu>\n                <Menu.Item key=\"databases\" icon={<DatabaseOutlined/>} onClick={(event) =>\n                {\n                    // window.localStorage.current = event.key\n                    history.push('/databases')\n                }}>\n                    Databases\n                </Menu.Item>\n                <Menu.Item key=\"out\" icon={<LogoutOutlined/>} onClick={(event) =>\n                {\n                    // window.localStorage.current = 'assignments'\n                    window.sessionStorage.removeItem('username')\n                    axios.get('/api/logout').then((response) =>\n                    {\n                        if (response.data.success)\n                        {\n                            message.success('Log out successfully.');\n                            history.push('/')\n                        }\n                    })\n                }}>\n                    Log out\n                </Menu.Item>\n            </Menu>\n        </div>\n    );\n}\n","import React, {useEffect, useState} from \"react\";\nimport axios from 'axios';\nimport {useHistory} from \"react-router-dom\";\nimport {Button, Layout, message, Space, Table} from 'antd';\nimport logo from '../common/images/logo.png';\nimport QueueAnim from 'rc-queue-anim';\nimport '../common/layout.css';\nimport Guide from \"../components/guideTeacher\";\n\n\nexport default function Assignments()\n{\n    // window.sessionStorage.current = 'assignments'\n    // const [timer, setTimer] = useState(0)\n    // const [show] = useState(true)\n    const {Header, Content, Sider} = Layout;\n    const [data, setData] = useState([])\n    const history = useHistory();\n    const columns = [\n        {\n            title: 'Assignment Name',\n            dataIndex: 'assignment_name',\n            key: 'name',\n            // render: text => <a>{text}</a>,\n        },\n        {\n            title: 'Start',\n            dataIndex: 'assignment_start_time',\n            key: 'start',\n        },\n        {\n            title: 'DDL',\n            dataIndex: 'assignment_end_time',\n            key: 'deadline',\n        },\n        {\n            title: 'Detail',\n            key: 'detail',\n            render: (record) => (\n                <Space size=\"middle\">\n                    <Button className='button' onClick={() =>\n                    {\n                        window.sessionStorage.assignment_id = record.assignment_id;\n                        // window.localStorage.assignment_ID = record.assignment_name;\n                        history.push(\"/teacherQuestions\");\n                    }}>detail</Button>\n                </Space>\n            ),\n        },\n        {\n            title: 'Update',\n            key: 'update',\n            render: (record) => (\n                <Space size=\"middle\">\n                    <Button className='button' onClick={() =>\n                    {\n                        window.sessionStorage.assignment_id = record.assignment_id;\n                        window.sessionStorage.assignment_name = record.assignment_name;\n                        window.sessionStorage.assignment_start_time = record.assignment_start_time;\n                        window.sessionStorage.assignment_end_time = record.assignment_end_time;\n\n                        history.push('/updateAssignment');\n                    }}>update</Button>\n                </Space>\n            ),\n        },\n        {\n            title: 'Delete',\n            key: 'delete',\n            render: (record) => (\n                <Space size=\"middle\">\n                    <Button className='button' onClick={() =>\n                    {\n                        axios.delete('/api/teacher/AssignmentDetail', {\n                            params: {\n                                assignment_id: record.assignment_id,\n                            }\n                        }).then((response) =>\n                        {\n                            if (response.data.success)\n                            {\n                                message.success('Delete successfully.');\n                                query_assignment_list()\n                            } else\n                            {\n                                message.error('Fail to delete, please retry.');\n                            }\n                        })\n                    }}>delete</Button>\n                </Space>\n            ),\n        }\n    ];\n\n    function query_assignment_list()\n    {\n        axios.defaults.withCredentials = true;\n        axios.get('/api/teacher/AssignmentListQuery').then((response) =>\n        {\n            const temp = response.data\n            for (let i = 0; i < temp.length; i++)\n            {\n                temp[i].key = temp[i].assignment_id;\n                // let newTime = new Date(temp[i].assignment_start_time);\n                // temp[i].assignment_start_time = strftime(\"%y/%m/%d %H:%M:%S\", newTime)\n                // newTime = new Date(temp[i].assignment_end_time);\n                // temp[i].assignment_end_time = strftime(\"%y/%m/%d %H:%M:%S\", newTime)\n            }\n\n            for (let k = 0; k < temp.length; k++)\n            {\n                for (let j = k; j < temp.length; j++)\n                {\n                    if (Date.parse(temp[k].assignment_end_time) > Date.parse(temp[j].assignment_end_time))\n                    {\n                        const op = temp[k];\n                        temp[k] = temp[j];\n                        temp[j] = op;\n                    }\n                }\n            }\n            setData(temp)\n        })\n    }\n\n    useEffect(() =>\n    {\n        query_assignment_list()\n        const timer = setInterval(query_assignment_list, 3000)\n\n        return () =>\n        {\n            clearInterval(timer)\n        }\n    }, [])\n    return <Layout>\n        <Header className=\"header\">\n            <img src={logo} style={{height: '45px'}} alt=\"\"/>\n        </Header>\n        <Layout>\n            <Sider style={{width: '200px'}} className=\"site-layout-content\">\n                {/*{props.guide}*/}\n                <Guide item=\"assignments\"/>\n            </Sider>\n            <Layout style={{padding: '0 24px 24px'}}>\n                <Content className=\"default_font\" style={{margin: '24px 0'}}>\n                    <QueueAnim\n                        key=\"demo\"\n                        type={['top', 'bottom']}\n                        duration=\"1400\"\n                        ease={['easeOutQuart', 'easeInOutQuart']}>\n                        <div key=\"assignments\">\n                            <Button type=\"primary\" style={{width: \"90px\", margin: '0 0 20px 0'}} onClick={() =>\n                            {\n                                history.push('/addAssignment')\n                            }}>Add</Button>\n                            <Table columns={columns} dataSource={data}/>\n                        </div>\n                    </QueueAnim>\n                </Content>\n            </Layout>\n        </Layout>\n    </Layout>\n}\n\n\n// import React from 'react';\n// import Guide from \"../components/guideTeacher\";\n// import Assignments from \"../components/assignments\";\n//\n//\n// export default function()\n// {\n//     return <Assignments action='addAssignment' guide={Guide({item: \"assignments\"})}/>\n// }","import React, {useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport GuideTeacher from \"../components/guideTeacher\";\nimport logo from '../common/images/logo.png';\nimport '../common/layout.css';\nimport {Badge, Button, Card, DatePicker, Input, Layout, message} from \"antd\";\nimport axios from \"axios\";\nimport QueueAnim from \"rc-queue-anim\";\nimport 'github-markdown-css'\nimport moment from 'moment';\nimport strftime from 'strftime'\n\n\nexport default function UpdateAssignment()\n{\n    // const [timer, setTimer] = useState(0)\n    // const [show] = useState(true)\n    const [id, setID] = useState('')\n    const [name, setName] = useState('')\n    const [start, setStart] = useState('');\n    const [end, setEnd] = useState('');\n    // const [isVisible, setIsvisible] = useState(0);\n    // const [description, setDescription] = useState('');\n    const {Header, Content, Sider} = Layout;\n    const {RangePicker} = DatePicker;\n    // const {TextArea} = Input;\n    const history = useHistory();\n\n    useEffect(() =>\n    {\n        // const id = window.sessionStorage.assignment_id\n        setID(window.sessionStorage.assignment_id)\n        setName(window.sessionStorage.assignment_name)\n        setStart(window.sessionStorage.assignment_start_time)\n        setEnd(window.sessionStorage.assignment_end_time)\n        // window.sessionStorage.removeItem('assignment_id')\n        // window.sessionStorage.removeItem('assignment_name')\n        // window.sessionStorage.removeItem('assignment_start_time')\n        // window.sessionStorage.removeItem('assignment_end_time')\n        // setDescription(props.assignment_description)\n    }, [])\n\n    return <Layout>\n        <Header className=\"header\">\n            <img src={logo} style={{height: '45px'}} alt=\"\"/>\n        </Header>\n        <Layout>\n            <Sider width={200}\n                   className=\"site-layout-content\">\n                <GuideTeacher item={\"assignments\"}/>\n            </Sider>\n            <Layout style={{padding: '0 24px 24px'}}>\n                <Content className=\"default_font\" style={{margin: '24px 0'}}>\n                    <QueueAnim\n                        key=\"demo\"\n                        type={['right', 'left']}\n                        duration=\"2000\"\n                        ease={['easeOutQuart', 'easeInOutQuart']}>\n                        {\n                            <Card key=\"demo1\" title=\"Update Assignment\">\n                                <div><Badge status=\"processing\" text=\"Assignment Name\"/></div>\n                                <Input style={{width: \"200px\"}} placeholder={name} onChange={value =>\n                                {\n                                    setName(value.target.value)\n                                }}/>\n                                {/*<div style={{height: \"20px\"}}/>*/}\n                                <div><Badge status=\"processing\" text=\"Assignment Duration\"/></div>\n                                <RangePicker\n                                    ranges={{\n                                        Today: [moment(), moment()],\n                                        'This Month': [moment().startOf('month'), moment().endOf('month')],\n                                    }}\n                                    showTime\n                                    defaultValue={[moment(start), moment(end)]}\n                                    format=\"YYYY/MM/DD HH:mm:ss\"\n                                    onChange={(dateStrings) =>\n                                    {\n                                        if (dateStrings.length > 0)\n                                        {\n                                            setStart(strftime('%B %d, %Y %H:%M:%S', new Date(dateStrings[0])));\n                                            setEnd(strftime('%B %d, %Y %H:%M:%S', new Date(dateStrings[1])))\n                                        }\n                                    }}\n                                />\n                                <div style={{height: \"20px\"}}/>\n                                <Button style={{width: \"90px\", margin: \"0 10px\"}} type=\"primary\" onClick={() =>\n                                {\n                                    axios.patch('api/teacher/AssignmentDetail', {\n                                        assignment_id: id,\n                                        assignment_name: name,\n                                        assignment_start_time: start,\n                                        assignment_end_time: end\n                                    }).then((response) =>\n                                    {\n                                        if (response.data.success)\n                                        {\n                                            message.success('Update successfully.');\n                                            history.push('/teacherAssignments')\n                                        } else\n                                        {\n                                            message.error('Fail to update, please retry.');\n                                        }\n                                    })\n                                }}>submit</Button>\n                            </Card>\n                        }\n                    </QueueAnim>\n                </Content>\n            </Layout>\n        </Layout>\n    </Layout>\n}\n","import React, {useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport GuideTeacher from \"../components/guideTeacher\";\nimport logo from '../common/images/logo.png';\nimport '../common/layout.css';\nimport {Badge, Button, Card, DatePicker, Input, Layout, message} from \"antd\";\nimport axios from \"axios\";\nimport QueueAnim from \"rc-queue-anim\";\nimport 'github-markdown-css'\nimport moment from 'moment';\nimport strftime from \"strftime\";\n\n\nexport default function Submit()\n{\n    // const [show] = useState(true)\n    const [name, setName] = useState('')\n    const [start, setStart] = useState('');\n    const [end, setEnd] = useState('');\n    // const [isVisible,setIsvisible] = useState(0);\n    // const [description,setDescription] = useState('');\n    const {Header, Content, Sider} = Layout;\n    const {RangePicker} = DatePicker;\n    // const {TextArea} = Input;\n    const history = useHistory();\n    return <Layout>\n        <Header className=\"header\">\n            <img src={logo} style={{height: '45px'}} alt=\"\"/>\n        </Header>\n        <Layout>\n            <Sider width={200}\n                   className=\"site-layout-content\">\n                <GuideTeacher item=\"assignments\"/>\n            </Sider>\n            <Layout style={{padding: '0 24px 24px'}}>\n                <Content className=\"default_font\" style={{margin: '24px 0'}}>\n                    <QueueAnim\n                        key=\"demo\"\n                        type={['right', 'left']}\n                        duration=\"2000\"\n                        ease={['easeOutQuart', 'easeInOutQuart']}>\n                        {[\n                            <Card key=\"demo1\" title=\"Add Assignment\">\n                                <div><Badge status=\"processing\" text=\"Assignment Name\"/></div>\n                                <Input style={{width: \"200px\"}} placeholder=\"Assignment Name\" onChange={value =>\n                                {\n                                    setName(value.target.value)\n                                }}/>\n                                <div style={{height: \"20px\"}}/>\n                                <div><Badge status=\"processing\" text=\"Assignment Duration\"/></div>\n                                <RangePicker\n                                    ranges={{\n                                        Today: [moment(), moment()],\n                                        'This Month': [moment().startOf('month'), moment().endOf('month')],\n                                    }}\n                                    showTime\n                                    format=\"YYYY/MM/DD HH:mm:ss\"\n                                    onChange={(dateStrings) =>\n                                    {\n                                        if (dateStrings != null)\n                                        {\n                                            if (dateStrings.length > 0)\n                                            {\n\n                                                setStart(strftime('%B %d, %Y %H:%M:%S', new Date(dateStrings[0])));\n                                                setEnd(strftime('%B %d, %Y %H:%M:%S', new Date(dateStrings[1])))\n                                                // setStart(1000 * dateStrings[0].unix());\n                                                // setEnd(1000 * dateStrings[1].unix())\n                                            }\n                                        }\n                                    }}\n                                />\n                                {/*<div style={{height: \"20px\"}}/>*/}\n                                {/*<TextArea className=\"submit_text\" key=\"demo4\" rows={5}*/}\n                                {/*          placeholder=\"Input topic description\" onChange={value =>*/}\n                                {/*{*/}\n                                {/*    setDescription(value.target.value)*/}\n                                {/*}}/>*/}\n                                {/*<div style={{height: \"20px\"}}/>*/}\n                                {/*<Checkbox onChange={e =>*/}\n                                {/*{*/}\n                                {/*    if (e.target.checked)*/}\n                                {/*    {*/}\n                                {/*        setIsvisible(1)*/}\n                                {/*    } else*/}\n                                {/*        setIsvisible(0)*/}\n                                {/*}}>is visible</Checkbox>*/}\n                                {/*<div style={{height: \"20px\"}}/>*/}\n                                <Button style={{width: \"90px\", margin: \"0 10px\"}} type=\"primary\" onClick={() =>\n                                {\n                                    axios.post('api/teacher/AssignmentDetail', {\n                                        assignment_name: name,\n                                        assignment_start_time: start,\n                                        assignment_end_time: end,\n                                    }).then((response) =>\n                                    {\n                                        if (response.data.success)\n                                        {\n                                            message.success('Add successfully.');\n                                            history.push('/teacherAssignments')\n                                        } else\n                                        {\n                                            message.error('Fail to add, please retry.');\n                                        }\n                                    })\n                                }}>submit</Button>\n                            </Card>\n                        ]}\n                    </QueueAnim>\n                </Content>\n            </Layout>\n        </Layout>\n    </Layout>\n}\n","import React, {useEffect, useState} from \"react\";\nimport GuideTeacher from \"../components/guideTeacher\";\nimport axios from 'axios';\nimport {useHistory} from \"react-router-dom\";\nimport {Button, Layout, message, Space, Table} from 'antd';\nimport logo from '../common/images/logo.png';\nimport '../common/layout.css';\nimport QueueAnim from \"rc-queue-anim\";\n\nexport default function Questions()\n{\n    // const [timer,setTimer] = useState(0)\n    // const [show] = useState(true)\n    const {Header, Content, Sider} = Layout;\n    const [data, setData] = useState([])\n    const history = useHistory();\n    const assignment_id = window.sessionStorage.assignment_id;\n    const columns = [\n        // {\n        //     title: 'Index',\n        //     dataIndex: 'question_index',\n        //     key: 'index'\n        // },\n        {\n            title: 'Question Name',\n            dataIndex: 'question_name',\n            key: 'question_name',\n            // render: text => <a>{text}</a>\n        },\n        {\n            title: 'Detail',\n            key: 'detail',\n            render: (record) => (\n                <Space size=\"middle\">\n                    <Button className='button' onClick={() =>\n                    {\n                        window.sessionStorage.detail_question_id = record.question_id;\n                        history.push('/questionDetail');\n                    }}>detail</Button>\n                </Space>\n            ),\n        },\n        {\n            title: 'Update',\n            key: 'update',\n            render: (record) => (\n                <Space size=\"middle\">\n                    <Button className='button' onClick={() =>\n                    {\n                        window.sessionStorage.update_question_id = record.question_id;\n                        history.push('/updateQuestion');\n                    }}>update</Button>\n                </Space>\n            ),\n        },\n        {\n            title: 'Delete',\n            key: 'delete',\n            render: (record) => (\n                <Space size=\"middle\">\n                    <Button className='button' onClick={() =>\n                    {\n                        axios.delete('api/teacher/QuestionDetail', {\n                            params: {\n                                question_id: record.question_id,\n                            }\n                        }).then((response) =>\n                        {\n                            if (response.data.success)\n                            {\n                                message.success('Delete successfully.');\n                                select_questions_by_assignment()\n                            } else\n                            {\n                                message.error('Fail to delete, please retry.');\n                            }\n                        })\n                    }}>delete</Button>\n                </Space>\n            ),\n        }\n        ,\n        // {\n        //     title: 'copycat',\n        //     key: 'copycat',\n        //     render: (record) => (\n        //         <Space size=\"middle\">\n        //             <Button className='button' onClick={()=>{\n        //                 window.localStorage.question_id = record.question_id\n        //                 history.push('/copycat');\n        //             }}>copycat</Button>\n        //         </Space>\n        //     ),\n        // }\n    ];\n\n    function select_questions_by_assignment()\n    {\n\n        axios.defaults.withCredentials = true;\n        axios.get('/api/teacher/QuestionList', {\n            params:\n                {\n                    assignment_id: assignment_id\n                }\n        }).then((response) =>\n        {\n            setData(response.data)\n        })\n    }\n\n    useEffect(() =>\n    {\n        select_questions_by_assignment()\n        const timer = setInterval(select_questions_by_assignment, 3000)\n\n        return () =>\n        {\n            clearInterval(timer)\n        }\n    }, [])\n    return <Layout>\n        <Header className=\"header\">\n            <img src={logo} style={{height: '45px'}} alt=\"\"/>\n        </Header>\n        <Layout>\n            <Sider width={200} className=\"site-layout-content\"><GuideTeacher item=\"assignments\"/></Sider>\n            <Layout style={{padding: '0 24px 24px'}}>\n                <Content className=\"default_font\" style={{margin: '24px 0'}}>\n                    <QueueAnim\n                        key=\"demo\"\n                        type={['top', 'bottom']}\n                        duration=\"1400\"\n                        ease={['easeOutQuart', 'easeInOutQuart']}>\n                        <div key=\"questions\">\n                            <Button type=\"primary\" style={{width: \"90px\", margin: \"0 10px\"}} onClick={() =>\n                            {\n                                history.push('/AddQuestion')\n                            }}>Add</Button>\n                            <div style={{height: '20px'}}/>\n                            <Table columns={columns} key=\"demo1\" dataSource={data}/>\n                        </div>\n                    </QueueAnim>\n                </Content>\n            </Layout>\n        </Layout>\n    </Layout>\n}","import React, {useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport GuideTeacher from \"../components/guideTeacher\";\nimport logo from '../common/images/logo.png';\nimport '../common/layout.css';\nimport '../common/question.css'\nimport {Button, Card, Layout, Space, Table} from \"antd\";\nimport axios from \"axios\";\nimport QueueAnim from \"rc-queue-anim\";\nimport 'github-markdown-css'\nimport {Controlled as CodeMirror} from \"react-codemirror2\";\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/sql/sql';\nimport 'codemirror/addon/hint/show-hint.css';\nimport 'codemirror/addon/hint/show-hint.js';\nimport 'codemirror/addon/hint/sql-hint.js';\nimport 'codemirror/theme/solarized.css';\n\n\nexport default function ()\n{\n    // const [timer,setTimer] = useState(0)\n    // const [show] = useState(true)\n    const [data, setData] = useState([])\n    const [questionName, setQuestionName] = useState('');\n    const [description, setDescription] = useState('');\n    const [output, setOutput] = useState('');\n    const [answer, setAnswer] = useState('');\n    const {Header, Content, Sider} = Layout;\n    const id = window.sessionStorage.detail_question_id;\n    const history = useHistory();\n    const columns = [\n        {\n            title: 'Student Name',\n            dataIndex: 'username',\n            key: 'username',\n            // render: text => <a>{text}</a>\n        },\n        {\n            title: 'Submit Time',\n            dataIndex: 'submit_time',\n            key: 'submit_time'\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (record) => (\n                <Space size=\"middle\">\n                    <Button className='button' onClick={() =>\n                    {\n                        window.sessionStorage.record_id = record.record_id;\n                        history.push(\"/teacherRecordDetail\");\n                    }}>{\"detail\"}</Button>\n                </Space>\n            ),\n        }\n    ]\n    useEffect(() =>\n    {\n        axios.get('/api/teacher/QuestionDetail', {\n            params: {\n                question_id: id\n            }\n        }).then((response) =>\n        {\n            setQuestionName(response.data.question_name);\n            setDescription(response.data.question_description)\n            setOutput(response.data.question_output)\n            setAnswer(response.data.question_answer)\n        })\n\n        function query_record_list()\n        {\n            axios.get('/api/teacher/RecordListQuery', {\n                params: {\n                    question_id: id\n                }\n            }).then((response) =>\n            {\n                const temp = response.data\n                for (let i = 0; i < temp.length; i++)\n                {\n                    temp[i].key = temp[i].username;\n                    // let newTime = new Date(temp[i].assignment_start_time);\n                    // temp[i].assignment_start_time = strftime(\"%y/%m/%d %H:%M:%S\", newTime)\n                    // newTime = new Date(temp[i].assignment_end_time);\n                    // temp[i].assignment_end_time = strftime(\"%y/%m/%d %H:%M:%S\", newTime)\n                }\n                for (let k = 0; k < temp.length; k++)\n                {\n                    for (let j = k; j < temp.length; j++)\n                    {\n                        if (Date.parse(temp[k].assignment_end_time) > Date.parse(temp[j].assignment_end_time))\n                        {\n                            const op = temp[k];\n                            temp[k] = temp[j];\n                            temp[j] = op;\n                        }\n                    }\n                }\n                setData(response.data)\n            })\n        }\n\n        query_record_list()\n        const timer = setInterval(query_record_list, 3000)\n\n        return () =>\n        {\n            clearInterval(timer)\n        }\n    }, [])\n    return <Layout>\n        <Header className=\"header\">\n            <img src={logo} style={{height: '45px'}} alt=\"\"/>\n        </Header>\n        <Layout>\n            <Sider width={200} className=\"site-layout-content\"><GuideTeacher item=\"assignments\"/></Sider>\n            <Layout style={{padding: '0 24px 24px'}}>\n                <Content className=\"default_font\" style={{margin: '24px 0'}}>\n                    <QueueAnim\n                        key=\"demo\"\n                        type={['right', 'left']}\n                        duration=\"2000\"\n                        ease={['easeOutQuart', 'easeInOutQuart']}>\n                        {/*<div id=\"detail\">*/}\n\n                        <div key=\"question_name\">\n                            <Card className=\"info-card\" title=\"Question Name\">\n                                <div dangerouslySetInnerHTML={{__html: questionName}}/>\n                            </Card>\n                        </div>\n                        <div key=\"question_description\">\n                            <Card className=\"info-card\" title=\"Question Description\">\n                                <div dangerouslySetInnerHTML={{__html: description}}/>\n                            </Card>\n                        </div>\n                        {/*<div key=\"output\">*/}\n                        {/*    <Card className=\"info-card\" title=\"Output\">*/}\n                        {/*        <div dangerouslySetInnerHTML={{__html: output}}/>*/}\n                        {/*    </Card>*/}\n                        {/*</div>*/}\n                        <div key=\"answer\">\n                            <Card className=\"info-card\" title=\"Standard Answer\">\n                                <CodeMirror\n                                    key='editor'\n                                    value={answer}\n                                    options={{\n                                        readOnly: true,\n                                        lineNumbers: true,\n                                        mode: {name: \"text/x-mysql\"},\n                                        lineWrapping: true,\n                                        foldGutter: true,\n                                        theme: \"solarized\",\n                                    }}\n                                />\n                            </Card>\n                        </div>\n                        <div key=\"Completion\">\n                            <Card className=\"info-card\" title=\"Completion\">\n                                <Table columns={columns} dataSource={data}/>\n                            </Card>\n                        </div>\n                        {/*<div style={{padding:'3px'}}/>*/}\n                        <div key=\"return\" className=\"button-container\">\n                            <Button style={{width: \"90px\"}} type=\"primary\" onClick={() =>\n                            {\n                                history.push('/teacherQuestions')\n                            }}>return</Button>\n                        </div>\n                        {/*</div>*/}\n                    </QueueAnim>\n                </Content>\n            </Layout>\n        </Layout>\n    </Layout>\n}\n","import React, {useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport GuideTeacher from \"../components/guideTeacher\";\nimport logo from '../common/images/logo.png';\nimport '../common/layout.css';\nimport '../common/question.css'\nimport {Button, Card, Layout} from \"antd\";\nimport axios from \"axios\";\nimport QueueAnim from \"rc-queue-anim\";\nimport 'github-markdown-css'\nimport {Controlled as CodeMirror} from \"react-codemirror2\";\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/sql/sql';\nimport 'codemirror/addon/hint/show-hint.css';\nimport 'codemirror/addon/hint/show-hint.js';\nimport 'codemirror/addon/hint/sql-hint.js';\nimport 'codemirror/theme/solarized.css';\n\n\nexport default function ()\n{\n    // const [timer,setTimer] = useState(0)\n    // const [show] = useState(true)\n    // const [data, setData] = useState([])\n    const [username, setUsername] = useState('');\n    const [code, setCode] = useState('');\n    // const [output, setOutput] = useState('');\n    const {Header, Content, Sider} = Layout;\n    const id = window.sessionStorage.record_id;\n    const history = useHistory();\n\n    useEffect(() =>\n    {\n        axios.get('/api/teacher/RecordOutput', {\n            params: {\n                record_id: id\n            }\n        }).then((response) =>\n        {\n            console.log(response.data)\n            setUsername(response.data.username);\n            setCode(response.data.record_code)\n        })\n\n    }, [])\n    return <Layout>\n        <Header className=\"header\">\n            <img src={logo} style={{height: '45px'}} alt=\"\"/>\n        </Header>\n        <Layout>\n            <Sider width={200} className=\"site-layout-content\"><GuideTeacher item=\"assignments\"/></Sider>\n            <Layout style={{padding: '0 24px 24px'}}>\n                <Content className=\"default_font\" style={{margin: '24px 0'}}>\n                    <QueueAnim\n                        key=\"demo\"\n                        type={['right', 'left']}\n                        duration=\"2000\"\n                        ease={['easeOutQuart', 'easeInOutQuart']}>\n                        {/*<div id=\"detail\">*/}\n\n                        <div key=\"username\">\n                            <Card className=\"info-card\" title=\"Username\">\n                                {/*{username}*/}\n                                <div dangerouslySetInnerHTML={{__html: username}}/>\n                            </Card>\n                        </div>\n                        <div key=\"code\">\n                            <Card title=\"submitted code\">\n                                <CodeMirror\n                                    key='editor'\n                                    value={code}\n                                    options={{\n                                        readOnly: true,\n                                        lineNumbers: true,\n                                        mode: {name: \"text/x-mysql\"},\n                                        lineWrapping: true,\n                                        foldGutter: true,\n                                        theme: \"solarized\",\n                                    }}\n                                />\n                            </Card>\n                        </div>\n                        ,\n                        {/*<div key=\"output\">*/}\n                        {/*    <Card className=\"info-card\" title=\"Output\">*/}\n                        {/*        <div dangerouslySetInnerHTML={{__html: output}}/>*/}\n                        {/*    </Card>*/}\n                        {/*</div>*/}\n                        {/*<div style={{padding:'3px'}}/>*/}\n                        <div key=\"return\" className=\"button-container\">\n                            <Button style={{width: \"90px\"}} type=\"primary\" onClick={() =>\n                            {\n                                history.push('/questionDetail')\n                            }}>return</Button>\n                        </div>\n                        {/*</div>*/}\n                    </QueueAnim>\n                </Content>\n            </Layout>\n        </Layout>\n    </Layout>\n}\n","import React, {useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport GuideTeacher from \"../components/guideTeacher\";\nimport logo from '../common/images/logo.png';\nimport '../common/layout.css';\nimport {Badge, Button, Card, Collapse, Input, Layout, message, Select} from \"antd\";\nimport axios from \"axios\";\nimport QueueAnim from \"rc-queue-anim\";\nimport 'github-markdown-css'\nimport '../common/otto.css'\n// import Editor from \"../components/editor\";\nimport {Controlled as CodeMirror} from 'react-codemirror2';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/sql/sql';\nimport 'codemirror/addon/hint/show-hint.css';\nimport 'codemirror/addon/hint/show-hint.js';\nimport 'codemirror/addon/hint/sql-hint.js';\nimport 'codemirror/theme/solarized.css';\nimport BraftEditor from 'braft-editor'\nimport 'braft-editor/dist/index.css'\n\n\nexport default function AddQuestion()\n{\n    // const [timer,setTimer] = useState(0)\n    const [data, setData] = useState([])\n    // const [show] = useState(true)\n    const [databaseId, setDatabaseId] = useState('')\n    const [questionName, setQuestionName] = useState('');\n    const [questionDescription, setQuestionDescription] = useState('');\n    const [questionOutput, setQuestionOutput] = useState('');\n    const [questionType, setQuestionType] = useState('sql')\n\n    const [code, setCode] = useState('');\n    // const [operate, setOperate] = useState('query');\n    // const [isOrder, setIsOrder] = useState('')\n    const {Header, Content, Sider} = Layout;\n    const {Option} = Select;\n    const {Panel} = Collapse;\n    const history = useHistory();\n    const editorProps = {\n        contentStyle: {height: 300},\n        contentFormat: 'html',\n        // defaultValue: '<p>Hello World!</p>',\n        // onChange: this.handleChange\n    }\n    const assignment_id = window.sessionStorage.assignment_id;\n\n    useEffect(() =>\n    {\n\n        axios.get('/api/teacher/DatabaseListQuery').then((response) =>\n        {\n            setData(response.data)\n        })\n    }, [])\n    return <Layout>\n        <Header className=\"header\">\n            <img src={logo} style={{height: '45px'}} alt=\"\"/>\n        </Header>\n        <Layout>\n            <Sider width={200} className=\"site-layout-content\"><GuideTeacher item=\"assignments\"/></Sider>\n            <Layout style={{padding: '0 24px 24px'}}>\n                <Content className=\"default_font\" style={{margin: '24px 0'}}>\n                    <QueueAnim\n                        key=\"demo\"\n                        type={['right', 'left']}\n                        duration=\"2000\"\n                        ease={['easeOutQuart', 'easeInOutQuart']}>\n\n                        <Card key=\"demo1\" title=\"Add Question\">\n                            {\n                                questionType === 'sql' ?\n                                    [<div>\n                                        <Badge status=\"processing\" text=\"Corresponding Database\"/>\n                                    </div>,\n                                        <Select\n                                            showSearch\n                                            style={{width: 200}}\n                                            placeholder=\"Search to Select\"\n                                            optionFilterProp=\"children\"\n                                            filterOption={(input, option) =>\n                                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                            }\n                                            filterSort={(optionA, optionB) =>\n                                                optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                                            }\n                                            onChange={(value) =>\n                                            {\n                                                setDatabaseId(value)\n                                            }}\n                                        >\n                                            {\n                                                data.map((v) => (\n                                                    <Option value={v.db_id}>{v.db_name}</Option>\n                                                ))\n                                            }\n                                        </Select>\n                                    ] : null\n                            }\n\n                            <div style={{height: \"10px\"}}/>\n                            <div>\n                                <Badge status=\"processing\" text=\"Question Name\"/>\n                            </div>\n                            <Input style={{width: \"200px\"}} placeholder=\"Question Name\" onChange={value =>\n                            {\n                                setQuestionName(value.target.value)\n                            }}/>\n                            <div style={{height: \"10px\"}}/>\n                            <div style={{padding: '3px'}}/>\n\n                            {/*<Collapse key=\"detail\" defaultActiveKey={[\"description\"]}>*/}\n                            <Collapse key=\"detail\" defaultActiveKey={[]}>\n                                <Panel key=\"description\" header=\"Question Description\">\n                                    <BraftEditor {...editorProps} onChange={(content) =>\n                                    {\n                                        setQuestionDescription(content.toHTML())\n                                    }}/>\n                                </Panel>\n                                {/*<div style={{height: \"5px\"}}/>*/}\n                                {/*<div style={{padding: '3px'}}/>*/}\n                                {/*<Panel key=\"output\" header=\"Output\">*/}\n                                {/*    <BraftEditor {...editorProps} onChange={(content) =>*/}\n                                {/*    {*/}\n                                {/*        setQuestionOutput(content.toHTML())*/}\n                                {/*    }}/>*/}\n                                {/*</Panel>*/}\n                                {\n                                    questionType === 'sql' ?\n                                        [\n                                            <div style={{height: \"5px\"}}/>,\n                                            <div style={{padding: '3px'}}/>,\n                                            <Panel key=\"answer\" header=\"Standard Answer\">\n                                                <CodeMirror\n                                                    key='editor'\n                                                    // value='# press Ctrl to autocomplete'\n                                                    onBeforeChange={(editor, data, value) => setCode(value)}\n                                                    options={{\n                                                        lineNumbers: true,\n                                                        mode: {name: \"text/x-mysql\"},\n                                                        extraKeys: {\"Ctrl\": \"autocomplete\"},\n                                                        // autofocus: true,\n                                                        styleActiveLine: true,\n                                                        lineWrapping: true,\n                                                        foldGutter: true,\n                                                        theme: \"solarized\",\n                                                    }}\n                                                />\n                                            </Panel>\n                                        ] : null\n                                    // <BraftEditor {...editorProps} onChange={(content) =>\n                                    // {\n                                    //     setCode(content.toHTML())\n                                    // }}/>\n                                }\n\n                            </Collapse>\n                            <div style={{height: \"20px\"}}/>\n                            <div>\n                                <Badge status=\"processing\" text=\"Question Type\"/>\n                            </div>\n\n                            <Select key=\"type\" defaultValue={questionType} onChange={(value) =>\n                            {\n                                setQuestionType(value)\n                            }}>\n                                <Option value=\"sql\">SQL</Option>\n                                <Option value=\"text\">Text</Option>\n                            </Select>\n\n                            <div style={{height: \"20px\"}}/>\n                            <Button style={{width: \"90px\"}} type=\"primary\" onClick={() =>\n                            {\n                                console.log({\n                                    question_name: questionName,\n                                    question_description: questionDescription,\n                                    question_output: questionOutput,\n                                    question_answer: code,\n                                    question_type: questionType,\n                                    assignment_id: assignment_id,\n                                    db_id: databaseId\n                                })\n                                axios.post('/api/teacher/QuestionDetail',\n                                    {\n                                        question_name: questionName,\n                                        question_description: questionDescription,\n                                        question_output: questionOutput,\n                                        question_answer: code,\n                                        question_type: questionType,\n                                        assignment_id: assignment_id,\n                                        db_id: databaseId\n                                    }).then((response) =>\n                                {\n                                    if (response.data.success)\n                                    {\n                                        message.success('Upload successfully.');\n                                        history.push('/teacherQuestions')\n                                    } else\n                                    {\n                                        message.error('Fail to upload, please retry.');\n                                    }\n                                })\n                            }}>submit</Button>\n                        </Card>\n                    </QueueAnim>\n                </Content>\n            </Layout>\n        </Layout>\n    </Layout>\n}\n","import React, {useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport GuideTeacher from \"../components/guideTeacher\";\nimport logo from '../common/images/logo.png';\nimport '../common/layout.css';\nimport {Badge, Button, Card, Collapse, Input, Layout, message, Select} from \"antd\";\nimport axios from \"axios\";\nimport QueueAnim from \"rc-queue-anim\";\nimport 'github-markdown-css'\nimport '../common/otto.css'\n// import Editor from \"../components/editor\";\nimport {Controlled as CodeMirror} from 'react-codemirror2';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/sql/sql';\nimport 'codemirror/addon/hint/show-hint.css';\nimport 'codemirror/addon/hint/show-hint.js';\nimport 'codemirror/addon/hint/sql-hint.js';\nimport 'codemirror/theme/solarized.css';\nimport BraftEditor from 'braft-editor'\nimport 'braft-editor/dist/index.css'\n\n\nexport default function UpdateQuestion()\n{\n    // const [timer,setTimer] = useState(0)\n    const [data, setData] = useState([])\n    const [databaseId, setDatabaseId] = useState('')\n    const [assignmentId, setAssignmentId] = useState('')\n    // const [show] = useState(true)\n    const [questionId, setQuestionId] = useState('');\n    const [questionName, setQuestionName] = useState('');\n    const [questionDescription, setQuestionDescription] = useState('')\n    const [questionOutput, setQuestionOutput] = useState('')\n    const [questionType, setQuestionType] = useState('sql')\n    const [code, setCode] = useState('');\n\n    const {Header, Content, Sider} = Layout;\n    const {Option} = Select;\n    const {Panel} = Collapse\n    const history = useHistory();\n    const editorProps = {\n        contentStyle: {height: 300},\n        contentFormat: 'html',\n        // defaultValue: '<p>Hello World!</p>',\n        // onChange: this.handleChange\n    }\n    const id = window.sessionStorage.update_question_id\n    useEffect(() =>\n    {\n        axios.get('/api/teacher/QuestionDetail', {\n            params: {\n                question_id: id\n            }\n        }).then((response) =>\n        {\n            console.log(response.data)\n            setDatabaseId(response.data.db_id)\n            setAssignmentId(response.data.assignment_id)\n            setQuestionId(response.data.question_id)\n            setQuestionName(response.data.question_name)\n            setQuestionDescription(response.data.question_description)\n            setQuestionOutput(response.data.question_output)\n            setQuestionType(response.data.question_type)\n            setCode(response.data.question_answer)\n        })\n\n        axios.get('/api/teacher/DatabaseListQuery').then((response) =>\n        {\n            setData(response.data)\n        })\n    }, [])\n\n    return <Layout>\n        <Header className=\"header\">\n            <img src={logo} style={{height: '45px'}} alt=\"\"/>\n        </Header>\n        <Layout>\n            <Sider width={200} className=\"site-layout-content\"><GuideTeacher item=\"assignments\"/></Sider>\n            <Layout style={{padding: '0 24px 24px'}}>\n                <Content className=\"default_font\" style={{margin: '24px 0'}}>\n                    <QueueAnim\n                        key=\"demo\"\n                        type={['right', 'left']}\n                        duration=\"2000\"\n                        ease={['easeOutQuart', 'easeInOutQuart']}>\n                        <Card key=\"demo1\" title=\"Update Question\">\n                            {\n                                questionType === 'sql' ?\n                                    [\n                                        <div>\n                                            <Badge status=\"processing\" text=\"Corresponding Database\"/>\n                                        </div>,\n                                        <Select\n                                            showSearch\n                                            style={{width: 200}}\n                                            key={databaseId}\n                                            defaultValue={databaseId}\n                                            // placeholder={databaseId}\n                                            // value={databaseId}\n                                            // placeholder=\"Search to Select\"\n                                            optionFilterProp=\"children\"\n                                            filterOption={(input, option) =>\n                                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                            }\n                                            filterSort={(optionA, optionB) =>\n                                                optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                                            }\n                                            onChange={(value) =>\n                                            {\n                                                setDatabaseId(value)\n                                            }}\n                                        >\n                                            {\n                                                data.map((v) => (\n                                                    <Option value={v.db_id}>{v.db_name}</Option>\n                                                ))\n                                            }\n                                        </Select>\n                                    ] : null\n                            }\n\n                            <div style={{height: \"10px\"}}/>\n                            <div>\n                                <Badge status=\"processing\" text=\"Question Name\"/>\n                            </div>\n                            <Input key=\"name\" style={{width: \"200px\"}} placeholder={questionName}\n                                   onChange={value =>\n                                   {\n                                       setQuestionName(value.target.value)\n                                   }}/>\n                            <div style={{height: \"10px\"}}/>\n                            <div style={{padding: '3px'}}/>\n                            <Collapse key=\"detail\" defaultActiveKey={[]}>\n                                <Panel key=\"description\" header=\"Question Description\">\n                                    <BraftEditor {...editorProps}\n                                                 defaultValue={BraftEditor.createEditorState(questionDescription)}\n                                                 onChange={(content) =>\n                                                 {\n                                                     setQuestionDescription(content.toHTML())\n                                                 }}/>\n                                </Panel>\n                                {/*<div style={{height: \"5px\"}}/>*/}\n                                {/*<div style={{padding: '3px'}}/>*/}\n                                {/*<Panel key=\"output\" header=\"Output\">*/}\n                                {/*    <BraftEditor {...editorProps} defaultValue={BraftEditor.createEditorState(questionOutput)} onChange={(content) =>*/}\n                                {/*    {*/}\n                                {/*        setQuestionOutput(content.toHTML())*/}\n                                {/*    }}/>*/}\n                                {/*</Panel>*/}\n                                {\n                                    questionType === 'sql' ?\n                                        [\n                                            <div style={{height: \"5px\"}}/>,\n                                            <div style={{padding: '3px'}}/>,\n                                            <Panel key=\"answer\" header=\"Standard Answer\">\n                                                <CodeMirror\n                                                    key='editor'\n                                                    // defaultValue={code}\n                                                    value={code}\n                                                    // value='# press Ctrl to autocomplete'\n                                                    onBeforeChange={(editor, data, value) => setCode(value)}\n                                                    options={{\n                                                        lineNumbers: true,\n                                                        mode: {name: \"text/x-mysql\"},\n                                                        extraKeys: {\"Ctrl\": \"autocomplete\"},\n                                                        // autofocus: true,\n                                                        styleActiveLine: true,\n                                                        lineWrapping: true,\n                                                        foldGutter: true,\n                                                        theme: \"solarized\",\n                                                    }}\n                                                />\n                                            </Panel>\n                                        ] : null\n                                }\n                            </Collapse>\n                            <div style={{height: \"20px\"}}/>\n                            <div>\n                                <Badge status=\"processing\" text=\"Question Type\"/>\n                            </div>\n\n                            <Select key={questionType} defaultValue={questionType} onChange={(value) =>\n                            {\n                                setQuestionType(value)\n                            }}>\n                                <Option value=\"sql\">SQL</Option>\n                                <Option value=\"text\">Text</Option>\n                            </Select>\n\n                            <div style={{height: \"20px\"}}/>\n                            <Button style={{width: \"90px\"}} type=\"primary\" onClick={() =>\n                            {\n                                console.log({\n                                    question_name: questionName,\n                                    question_description: questionDescription,\n                                    question_output: questionOutput,\n                                    question_answer: code,\n                                    question_type: questionType,\n                                    assignment_id: assignmentId,\n                                    db_id: databaseId\n                                })\n                                axios.patch('/api/teacher/QuestionDetail',\n                                    {\n                                        question_id: questionId,\n                                        question_name: questionName,\n                                        question_description: questionDescription,\n                                        question_output: questionOutput,\n                                        question_answer: code,\n                                        question_type: questionType,\n                                        assignment_id: assignmentId,\n                                        db_id: databaseId\n                                    }).then((response) =>\n                                {\n                                    if (response.data.success)\n                                    {\n                                        message.success('update successfully.');\n                                        history.push('/teacherQuestions')\n                                    } else\n                                    {\n                                        message.error('Fail to update, please retry.');\n                                    }\n                                })\n                            }}>update</Button>\n                        </Card>\n                    </QueueAnim>\n                </Content>\n            </Layout>\n        </Layout>\n    </Layout>\n}\n","import React, {useEffect, useState} from \"react\";\nimport GuideTeacher from \"../components/guideTeacher\";\nimport axios from 'axios';\nimport {useHistory} from \"react-router-dom\";\nimport {Button, Layout, message, Space, Table} from 'antd';\nimport logo from '../common/images/logo.png';\nimport QueueAnim from 'rc-queue-anim';\nimport '../common/layout.css';\n\nexport default function Databases()\n{\n    const success_init = () =>\n    {\n        message.success('init successfully');\n    };\n    const success_delete = () =>\n    {\n        message.success('delete successfully');\n    };\n    // const [show] = useState(true)\n    // const [operation_type, setOperation_type] = useState('query')\n    const {Header, Content, Sider} = Layout;\n    const [data, setData] = useState([])\n    const history = useHistory();\n\n    function queryDatabaseList()\n    {\n        axios.get('/api/teacher/DatabaseListQuery').then((response) =>\n        {\n            const temp = response.data\n            setData(temp)\n        })\n    }\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'db_name',\n            key: 'database_name'\n        },\n        {\n            title: 'Description',\n            dataIndex: 'db_description',\n            key: 'database_description'\n        },\n        {\n            title: 'Upload Time',\n            dataIndex: 'upload_time',\n            key: 'upload_time'\n        },\n        {\n            title: 'Delete',\n            key: 'delete',\n            render: (record) => (\n                <Space size=\"middle\">\n                    <Button className='button' onClick={() =>\n                    {\n                        console.log(record.database_id)\n                        axios.delete('/api/teacher/DatabaseDetail', {\n                            params: {\n                                db_id: record.db_id,\n                            }\n                        }).then((response) =>\n                        {\n                            if (response.data.success)\n                            {\n                                message.success('delete successfully.');\n                                queryDatabaseList()\n                            } else\n                            {\n                                message.error('Fail to delete, there are some questions dependent on this database.');\n                            }\n                        })\n                    }}>delete</Button>\n                </Space>\n            ),\n        },\n    ];\n    useEffect(() =>\n    {\n        function queryDatabaseList()\n        {\n            axios.get('/api/teacher/DatabaseListQuery').then((response) =>\n            {\n                const temp = response.data\n                setData(temp)\n            })\n        }\n\n        queryDatabaseList()\n        const timer = setInterval(queryDatabaseList, 3000)\n\n        return () =>\n        {\n            clearInterval(timer)\n        }\n    }, [])\n    return <Layout>\n        <Header className=\"header\">\n            <img src={logo} style={{height: '45px'}} alt=\"\"/>\n        </Header>\n        <Layout>\n            <Sider style={{width: '200px'}} className=\"site-layout-content\"><GuideTeacher item={\"databases\"}/></Sider>\n            <Layout style={{padding: '0 24px 24px'}}>\n                <Content className=\"default_font\" style={{margin: '24px 0'}}>\n                    <QueueAnim\n                        key=\"demo\"\n                        type={['top', 'bottom']}\n                        duration=\"1400\"\n                        ease={['easeOutQuart', 'easeInOutQuart']}>\n                        <div key=\"databases\">\n                            <Button style={{width: \"90px\"}} type=\"primary\" onClick={() =>\n                            {\n                                history.push('/addDatabase')\n                            }}>Add</Button>\n                            <div style={{height: '20px'}}/>\n                            <Table columns={columns} key=\"demo1\" dataSource={data}/>\n                        </div>\n                    </QueueAnim>\n                </Content>\n            </Layout>\n        </Layout>\n    </Layout>\n}\n\n","import React, {useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport GuideTeacher from \"../components/guideTeacher\";\nimport logo from '../common/images/logo.png';\nimport '../common/layout.css';\nimport {Badge, Button, Card, Input, Layout, message, Upload} from \"antd\";\nimport axios from \"axios\";\nimport {UploadOutlined} from '@ant-design/icons';\nimport QueueAnim from \"rc-queue-anim\";\nimport 'github-markdown-css'\n// import CustomUpload from '../components/upload'\n\n\nexport default function AddDatabase()\n{\n    const {TextArea} = Input;\n    // const [show] = useState(true)\n    const [databaseName, setDatabaseName] = useState('')\n    const [description, setDescription] = useState('')\n    const [file, setFile] = useState('')\n    const [fileList, setFileList] = useState([])\n    const {Header, Content, Sider} = Layout;\n    const history = useHistory();\n\n    const props = {\n        // action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n        beforeUpload: (curFile, curFileList) =>\n        {\n            console.log(curFile);\n            setFile(curFile);\n            return false;\n        },\n        onChange: (info) =>\n        {\n            let fileList = [...info.fileList];\n\n            // 1. Limit the number of uploaded files\n            // Only to show two recent uploaded files, and old ones will be replaced by the new\n            fileList = fileList.slice(-1);\n\n            // 2. Read from response and show file link\n            fileList = fileList.map(file =>\n            {\n                if (file.response)\n                {\n                    // Component will show file.url as link\n                    file.url = file.response.url;\n                }\n                return file;\n            });\n\n            setFileList(fileList)\n        },\n        fileList: fileList\n    };\n\n    return <Layout>\n        <Header className=\"header\">\n            <img src={logo} style={{height: '45px'}} alt=\"\"/>\n        </Header>\n        <Layout>\n            <Sider width={200} className=\"site-layout-content\"><GuideTeacher item=\"databases\"/></Sider>\n            <Layout style={{padding: '0 24px 24px'}}>\n                <Content className=\"default_font\" style={{margin: '24px 0'}}>\n                    <QueueAnim\n                        key=\"demo\"\n                        type={['right', 'left']}\n                        duration=\"2000\"\n                        ease={['easeOutQuart', 'easeInOutQuart']}>\n                        <Card key=\"demo1\" title=\"Add Database\">\n                            <div>\n                                <Badge status=\"processing\" text=\"Database Name\"/>\n                            </div>\n                            <Input style={{width: \"200px\"}} placeholder=\"Database Name\" onChange={value =>\n                            {\n                                setDatabaseName(value.target.value)\n                            }}/>\n                            <div style={{height: \"20px\"}}/>\n                            <TextArea className=\"submit_text\" key=\"demo4\" rows={5}\n                                      placeholder=\"Input topic description.\" onChange={value =>\n                            {\n                                setDescription(value.target.value)\n                            }}/>\n                            <div style={{height: \"20px\"}}/>\n                            <div><Badge status=\"processing\" text=\"Select the SQLite database file.\"/></div>\n                            {/*<form id=\"upload\" encType=\"multipart/form-data\" method=\"post\">*/}\n                            {/*    <input type=\"file\" name=\"Select\"/>*/}\n                            {/*    <input type=\"button\" value=\"提交\" onClick={(event) =>*/}\n                            {/*    {*/}\n                            {/*        const upload = document.getElementById('upload')*/}\n                            {/*        console.log(upload)*/}\n                            {/*        const form = new FormData(upload)*/}\n                            {/*        console.log(form.get('Select'))*/}\n                            {/*    }}/>*/}\n                            {/*</form>*/}\n                            <Upload {...props}>\n                                <Button icon={<UploadOutlined/>}>Select</Button>\n                            </Upload>\n                            <div style={{height: \"20px\"}}/>\n                            <Button style={{width: \"90px\"}} type=\"primary\" onClick={() =>\n                            {\n                                const form = new FormData()\n                                form.append(\"db_name\", databaseName)\n                                form.append(\"db_description\", description)\n                                form.append(\"file\", file)\n                                axios.post('api/teacher/DatabaseDetail', form).then((response) =>\n                                {\n                                    if (response.data.success)\n                                    {\n                                        message.success('Add successfully.');\n                                        history.push('/databases')\n                                    } else\n                                    {\n                                        message.error('Fail to add, please retry.');\n                                    }\n                                })\n                            }}>submit</Button>\n                        </Card>\n                    </QueueAnim>\n                </Content>\n            </Layout>\n        </Layout>\n    </Layout>\n}\n","import React from 'react'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport App from './homepage/app'\nimport Login from './homepage/login'\nimport Assignments from './student/assignments'\nimport Questions from './student/questions'\nimport Submit from './student/submit'\nimport Records from './student/records'\nimport RecordDetail from \"./student/recordDetail\";\n// import Users from './homepage/user'\n// import Change_pwd from './homepage/change_pwd'\n// import Forget from './homepage/forget'\nimport './common/font.css'\nimport TeacherAssignments from './teacher/teacherAssignments'\nimport UpdateAssignment from \"./teacher/updateAssignment\";\nimport AddAssignment from \"./teacher/addAssignment\";\n\nimport TeacherQuestions from \"./teacher/teacherQuestions\"\nimport QuestionDetail from \"./teacher/questionDetail\";\nimport TeacherRecordDetail from \"./teacher/teacherRecordDetail\"\nimport AddQuestion from \"./teacher/addQuestion\";\nimport UpdateQuestion from \"./teacher/updateQuestion\";\n\nimport Databases from \"./teacher/databases\";\nimport AddDatabase from \"./teacher/addDatabase\";\n// import Change_pwd_teacher from './teacher_pages/change_pwd_teacher'\n// import Admin_users from \"./admin_pages/admin_users\";\n// import Admin_chet from \"./admin_pages/admin_chet\";\n// import Copycat from \"./teacher_pages/copycat\";\n// import Add_trigger from \"./teacher_pages/add_trigger\";\n// import AnimatedRouter from \"react-animated-router\";\n// import 'react-animated-router/animate.css'\n\nexport default function IRouter()\n{\n    return <Router>\n        <Switch>\n            <Route path=\"/login\" component={Login}/>\n\n            <Route path=\"/assignments\" component={Assignments}/>\n            <Route path=\"/questions\" component={Questions}/>}\n            <Route path=\"/submit\" component={Submit}/>}\n            <Route path=\"/records\" component={Records}/>\n            <Route path=\"/recordDetail\" component={RecordDetail}/>\n            {/*<Route path=\"/users\" component={Users}/>*/}\n            {/*<Route path=\"/change_pwd\" component={Change_pwd}/>}*/}\n            {/*<Route path=\"/forget\" component={Forget}/>}*/}\n            <Route path=\"/teacherAssignments\" component={TeacherAssignments}/>}\n            <Route path=\"/updateAssignment\" component={UpdateAssignment}/>\n            <Route path=\"/addAssignment\" component={AddAssignment}/>\n\n            <Route path=\"/teacherQuestions\" component={TeacherQuestions}/>\n            <Route path=\"/questionDetail\" component={QuestionDetail}/>\n            <Route path=\"/teacherRecordDetail\" component={TeacherRecordDetail}/>\n            {/*<Route path=\"/change_pwd_teacher\" component={Change_pwd_teacher}/>}*/}\n            <Route path=\"/addQuestion\" component={AddQuestion}/>\n            <Route path=\"/databases\" component={Databases}/>\n            <Route path=\"/addDatabase\" component={AddDatabase}/>\n            <Route path=\"/updateQuestion\" component={UpdateQuestion}/>\n            {/*<Route path=\"/admin_users\" component={Admin_users}/>*/}\n            {/*<Route path=\"/admin_chet\" component={Admin_chet}/>*/}\n            {/*<Route path=\"/copycat\" component={Copycat}/>*/}\n            {/*<Route path=\"/add_trigger\" component={Add_trigger}/>*/}\n            <Route path=\"/\" component={App}/>\n            <Route component={App}/>\n        </Switch>\n    </Router>\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import * as serviceWorker from './serviceWorker';\nimport Router from \"./router\";\nimport axios from 'axios'\nimport {message} from \"antd\";\n\nfunction setup(axios)\n{\n    axios.interceptors.response.use(function (response)\n    {\n        return response;\n    }, function (error)\n    {\n        if (error.response.status === 401)\n        {\n            message.error('Unauthorized Access!');\n            // window.location.href=\"/\";\n            // setTimeout(() =>\n            // {\n            // }, 3000)\n            return Promise.reject(error);\n        }\n        // return error\n        return Promise.reject(error);\n\n    });\n}\n\naxios.defaults.crossDomain = true;\naxios.defaults.withCredentials = true\nsetup(axios)\n// ReactDOM.render(<Router/>, document.body);\nReactDOM.render(<Router/>, document.getElementById('root'));\n","import React, {useState} from \"react\";\nimport {Form, Input, Menu, message, Modal} from 'antd';\nimport {useHistory} from \"react-router-dom\";\nimport '../common/font.css'\nimport {CalendarOutlined, LogoutOutlined, SnippetsOutlined, ToolOutlined, UserOutlined} from '@ant-design/icons';\nimport axios from \"axios\";\n\n\nconst FormItem = Form.Item;\nexport default function Guide(props)\n{\n    const {SubMenu} = Menu;\n    const history = useHistory();\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [oldPassword, setOldPassword] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n\n    const singleLayout = {\n        // wrapperCol: {offset: 8, span: 16},\n        wrapperCol: {span: 24},\n    };\n    const doubleLayout = {\n        labelCol: {span: 8},\n        wrapperCol: {span: 16},\n    };\n\n    return (<div className=\"default_font\">\n            {/*<Menu selectedKeys={[window.sessionStorage.current]}*/}\n            <Menu selectedKeys={[props.item]}\n                  mode=\"inline\"\n                  style={{height: '100%', borderRight: 0}}>\n                <Menu.Item key=\"assignments\" icon={<CalendarOutlined/>} onClick={(event) =>\n                {\n                    // window.sessionStorage.current = event.key\n                    history.push('/assignments')\n                }}>\n                    Assignments\n                </Menu.Item>\n                <Menu.Item key=\"records\" icon={<SnippetsOutlined/>} onClick={(event) =>\n                {\n                    // window.sessionStorage.current = event.key\n                    history.push('/records')\n                }}>\n                    Records\n                </Menu.Item>\n                <Modal title=\"Change Password\" visible={isModalVisible}\n                       onOk={() =>\n                       {\n                           console.log(\"aaaaaaaaaaa\")\n                           axios.defaults.withCredentials = true;\n                           axios.get('/api/ChangePassword',\n                               {\n                                   params: {\n                                       current_pw: oldPassword,\n                                       new_pw: newPassword\n                                   }\n                               }).then((response) =>\n                           {\n                               if (response.data.success)\n                               {\n                                   message.success('Change successfully.');\n                                   setIsModalVisible(false)\n                               } else\n                               {\n                                   message.error('Invalid authentication information.');\n                               }\n                           })\n                       }}\n                       onCancel={() => setIsModalVisible(false)}>\n                    <Form className='change-form'\n                          name=\"basic\"\n                          initialValues={{remember: true}}>\n                        <FormItem {...singleLayout} style={{textAlign: \"center\"}}>\n                            <p className=\"form_title\">{\"user: \" + window.sessionStorage.username}</p>\n                        </FormItem>\n                        <FormItem  {...doubleLayout} label=\"old password\">\n                            <Input placeholder=\"Please enter your old password.\"\n                                   maxLength={30} type={\"password\"}\n                                   onChange={(event) =>\n                                   {\n                                       setOldPassword(event.target.value)\n                                   }}/>\n                        </FormItem>\n                        <FormItem  {...doubleLayout} label=\"new password\">\n                            <Input placeholder=\"Please enter your new password.\"\n                                   maxLength={30} type={\"password\"}\n                                   onChange={(event) =>\n                                   {\n                                       setNewPassword(event.target.value)\n                                   }}/>\n                        </FormItem>\n                    </Form>\n                </Modal>\n                <SubMenu key=\"user\" icon={<UserOutlined/>} title=\"user\">\n                    <Menu.ItemGroup title={'The current student: ' + window.sessionStorage.username}>\n                        <Menu.Item key=\"change_pwd\" icon={<ToolOutlined/>} onClick={(event) =>\n                        {\n                            // window.sessionStorage.current = event.key\n                            setIsModalVisible(true);\n                            // history.push('/change_pwd')\n                        }}>edit password</Menu.Item>\n                        {/*<Menu.Item key=\"assignments_grade\" icon={<ProfileOutlined />} onClick={(event)=>{*/}\n                        {/*    info()*/}\n                        {/*    window.sessionStorage.current = event.key*/}\n                        {/*    history.push('/users')*/}\n                        {/*}}>查看assignment分数</Menu.Item>*/}\n                    </Menu.ItemGroup>\n                </SubMenu>\n                <Menu.Item key=\"out\" icon={<LogoutOutlined/>} onClick={(event) =>\n                {\n                    // window.sessionStorage.current = 'assignments'\n                    window.sessionStorage.removeItem('username')\n                    axios.get('/api/logout').then((response) =>\n                    {\n                        if (response.data.success)\n                        {\n                            message.success('Log out successfully.');\n                            history.push('/')\n                        }\n                    })\n                }}>\n                    Log out\n                </Menu.Item>\n            </Menu>\n        </div>\n    );\n}\n"],"sourceRoot":""}